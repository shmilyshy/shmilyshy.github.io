<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第六篇文章</title>
      <link href="/2023/01/05/06%E7%AC%AC%E5%85%AD%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/01/05/06%E7%AC%AC%E5%85%AD%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="哈哈哈哈哈哈哈哈哈哈哈"><a href="#哈哈哈哈哈哈哈哈哈哈哈" class="headerlink" title="哈哈哈哈哈哈哈哈哈哈哈"></a>哈哈哈哈哈哈哈哈哈哈哈</h2>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记</title>
      <link href="/2023/01/05/05%E7%AC%AC%E4%BA%94%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/01/05/05%E7%AC%AC%E4%BA%94%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 作为日记加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第四篇文章</title>
      <link href="/2023/01/05/04%E7%AC%AC%E5%9B%9B%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/01/05/04%E7%AC%AC%E5%9B%9B%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="哈哈哈哈哈哈哈哈哈哈哈"><a href="#哈哈哈哈哈哈哈哈哈哈哈" class="headerlink" title="哈哈哈哈哈哈哈哈哈哈哈"></a>哈哈哈哈哈哈哈哈哈哈哈</h2>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高数极限公式</title>
      <link href="/2023/01/05/03%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/01/05/03%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=" "></a> </h2>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>忆往昔</title>
      <link href="/2023/01/04/02%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/01/04/02%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="忆往昔"><a href="#忆往昔" class="headerlink" title="忆往昔"></a>忆往昔</h2><div class='poem'><div class='poem-title'>忆往昔</div><div class='poem-author'></div><p>星落棋局绘江山，长叹古城英雄梦。<br>破镜难圆思故人，晓风残月寄相思。<br>盼君许下红颜梦，潇潇落叶君未归。<br>执笔续写儿女情，方显我心似君心。</p></div>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>this的绑定规则以及指向问题</title>
      <link href="/2023/01/03/01%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2023/01/03/01%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="this-到底指向什么呢"><a href="#this-到底指向什么呢" class="headerlink" title="this 到底指向什么呢"></a>this 到底指向什么呢</h1><ul><li>我们先来看一个让人困惑的问题：<ol><li>定义一个函数，我们采用三种不同的方式对它进行调用，它产生了三种不同的结果</li></ol></li><li><p>这个的案例可以给我们什么样的启示呢？</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义函数</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">name</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo函数:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.方式一: 直接调用</span></span><br><span class="line">    <span class="comment">// foo()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.方式二: 通过对象调起</span></span><br><span class="line">    <span class="keyword">var</span> obj = &#123; <span class="attr">name</span>: <span class="string">&quot;why&quot;</span> &#125;</span><br><span class="line">    obj.<span class="property">aaa</span> = foo</span><br><span class="line">    obj.<span class="title function_">aaa</span>()</span><br><span class="line">    <span class="comment">//方式三:通过call/apply调用</span></span><br><span class="line">    foo.<span class="title function_">call</span>(<span class="string">&quot;abc&quot;</span>);<span class="comment">//String&#123;&quot;abc&quot;&#125;对象</span></span><br></pre></td></tr></table></figure><ol><li>函数在调用时，JavaScript 会默认给 this 绑定一个值；</li><li>this 的绑定和定义的位置（编写的位置）没有关系；</li><li>this 的绑定和调用方式以及调用的位置有关系；</li><li>this 是在运行时被绑定的；</li></ol></li><li><p>那么 this 到底是怎么样的绑定规则呢？我们一起来看一下吧！</p><ol><li>绑定一：默认绑定；</li><li>绑定二：隐式绑定；</li><li>绑定三：显示绑定；</li><li>绑定四：new 绑定；</li></ol></li></ul><h2 id="规则一：默认绑定"><a href="#规则一：默认绑定" class="headerlink" title="规则一：默认绑定"></a>规则一：默认绑定</h2><ul><li><p>什么情况下使用默认绑定呢？独立函数调用。</p><ol><li>独立的函数调用我们可以理解成函数没有被绑定到某个对象上进行调用；</li></ol></li><li><p>我们通过几个案例来看一下，常见的默认绑定</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &quot;use strict&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义函数</span></span><br><span class="line">    <span class="comment">// 1.普通的函数被独立的调用</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">foo</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.函数定义在对象中, 但是独立调用</span></span><br><span class="line">    <span class="keyword">var</span> obj = &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;why&quot;</span>,</span><br><span class="line">      <span class="attr">bar</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;bar:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> baz = obj.<span class="property">bar</span></span><br><span class="line">    <span class="title function_">baz</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.高阶函数</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">fn</span>) &#123;</span><br><span class="line">      <span class="title function_">fn</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">test</span>(obj.<span class="property">bar</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.严格模式下, 独立调用的函数中的this指向的是undefined</span></span><br></pre></td></tr></table></figure><h2 id="规则二：隐式绑定"><a href="#规则二：隐式绑定" class="headerlink" title="规则二：隐式绑定"></a>规则二：隐式绑定</h2><ul><li><p>另外一种比较常见的调用方式是通过某个对象进行调用的：</p><ol><li>也就是它的调用位置中，是通过某个对象发起的函数调用。</li></ol></li><li><p>我们通过几个案例来看一下，常见的默认绑定</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 你不知道的JavaScript(上中下)</span></span><br><span class="line">    <span class="comment">// 隐式绑定</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo函数:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> obj = &#123;</span><br><span class="line">      <span class="attr">bar</span>: foo</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    obj.<span class="title function_">bar</span>()</span><br></pre></td></tr></table></figure><h2 id="规则三：显式绑定"><a href="#规则三：显式绑定" class="headerlink" title="规则三：显式绑定"></a>规则三：显式绑定</h2><ul><li><p>隐式绑定有一个前提条件： 1.必须在调用的对象内部有一个对函数的引用（比如一个属性）； 2.如果没有这样的引用，在进行调用时，会报找不到该函数的错误； 3.正是通过这个引用，间接的将 this 绑定到了这个对象上；</p></li><li><p>如果我们不希望在 对象内部 包含这个函数的引用，同时又希望在这个对象上进行强制调用，该怎么做呢？</p></li><li><p>JavaScript 所有的函数都可以使用 call 和 apply 方法。</p><ol><li><p>第一个参数是相同的，要求传入一个对象；</p><ol><li>这个对象的作用是什么呢？就是给 this 准备的。</li><li>在调用这个函数时，会将 this 绑定到这个传入的对象上。</li></ol></li><li><p>后面的参数，apply 为数组，call 为参数列表；</p><ol><li><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/this.png"/></div></div></li><li><div class="img-wrap"><div class="img-bg"><img class="img" src="/img/this1.png"/></div></div></li></ol></li></ol></li></ul><ul><li>因为上面的过程，我们明确的绑定了 this 指向的对象，所以称之为 显式绑定。</li></ul><h2 id="规则三：显式绑定-1"><a href="#规则三：显式绑定-1" class="headerlink" title="规则三：显式绑定"></a>规则三：显式绑定</h2><ul><li><p>隐式绑定有一个前提条件：</p><ol><li><p>必须在调用的对象内部有一个对函数的引用（比如一个属性）；</p></li><li><p>如果没有这样的引用，在进行调用时，会报找不到该函数的错误；</p></li><li><p>正是通过这个引用，间接的将 this 绑定到了这个对象上；</p></li></ol></li><li><p>如果我们不希望在 对象内部 包含这个函数的引用，同时又希望在这个对象上进行强制调用，该怎么做呢？</p></li><li><p>JavaScript 所有的函数都可以使用 call 和 apply 方法。</p><ol><li><p>第一个参数是相同的，要求传入一个对象；</p><ol><li><p>这个对象的作用是什么呢？就是给 this 准备的。</p></li><li><p>在调用这个函数时，会将 this 绑定到这个传入的对象上。</p></li></ol></li><li><p>后面的参数，apply 为数组，call 为参数列表；</p></li></ol></li><li><p>因为上面的过程，我们明确的绑定了 this 指向的对象，所以称之为 显式绑定。</p></li></ul><h2 id="call、apply、bind"><a href="#call、apply、bind" class="headerlink" title="call、apply、bind"></a>call、apply、bind</h2><ul><li><p>通过 call 或者 apply 绑定 this 对象</p><ol><li>显示绑定后，this 就会明确的指向绑定的对象</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line">foo.<span class="title function_">call</span>(<span class="variable language_">window</span>);<span class="comment">//window</span></span><br><span class="line">foo.<span class="title function_">call</span>(<span class="attr">name</span>:<span class="string">&quot;shy&quot;</span>);<span class="comment">//&#123;name:&quot;shy&quot;&#125;</span></span><br><span class="line">foo.<span class="title function_">call</span>(<span class="number">123</span>);<span class="comment">//Number对象，存放时123</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// call/apply</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">name, age, height</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo函数被调用:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;打印参数:&quot;</span>, name, age, height)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ()调用</span></span><br><span class="line">  <span class="title function_">foo</span>(<span class="string">&quot;why&quot;</span>, <span class="number">18</span>, <span class="number">1.88</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// apply</span></span><br><span class="line">  第一个参数: 绑定<span class="variable language_">this</span></span><br><span class="line">  第二个参数: 传入额外的实参, 以数组的形式</span><br><span class="line">  foo.<span class="title function_">apply</span>(<span class="string">&quot;apply&quot;</span>, [<span class="string">&quot;kobe&quot;</span>, <span class="number">30</span>, <span class="number">1.98</span>])</span><br><span class="line">  <span class="comment">// call</span></span><br><span class="line">  <span class="comment">// 第一个参数: 绑定this</span></span><br><span class="line">  <span class="comment">// 参数列表: 后续的参数以多参数的形式传递, 会作为实参</span></span><br><span class="line">  foo.<span class="title function_">call</span>(<span class="string">&quot;call&quot;</span>, <span class="string">&quot;james&quot;</span>, <span class="number">25</span>, <span class="number">2.05</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">name, age, height, address</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;参数:&quot;</span>, name, age, height, address)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123; <span class="attr">name</span>: <span class="string">&quot;why&quot;</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 需求: 调用foo时, 总是绑定到obj对象身上(不希望obj对象身上有函数)</span></span><br><span class="line"><span class="comment">// 1.bind函数的基本使用</span></span><br><span class="line"><span class="keyword">var</span> bar = foo.<span class="title function_">bind</span>(obj)</span><br><span class="line"><span class="title function_">bar</span>() <span class="comment">// this -&gt; obj</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.bind函数的其他参数(了解)</span></span><br><span class="line"><span class="keyword">var</span> bar = foo.<span class="title function_">bind</span>(obj, <span class="string">&quot;kobe&quot;</span>, <span class="number">18</span>, <span class="number">1.88</span>)</span><br><span class="line"><span class="title function_">bar</span>(<span class="string">&quot;james&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>如果我们希望一个函数总是显示的绑定到一个对象上，可以怎么做呢？</p><ol><li><p>使用 bind 方法，bind() 方法创建一个新的绑定函数（bound function，BF）；</p></li><li><p>绑定函数是一个 exotic function object（怪异函数对象，ECMAScript 2015 中的术语）</p></li><li><p>在 bind() 被调用时，这个新函数的 this 被指定为 bind() 的第一个参数，而其余参数将作为新函数的参数，供调用时使用。</p></li></ol></li></ul><h2 id="内置函数的绑定思考"><a href="#内置函数的绑定思考" class="headerlink" title="内置函数的绑定思考"></a>内置函数的绑定思考</h2><ul><li><p>有些时候，我们会调用一些 JavaScript 的内置函数，或者一些第三方库中的内置函数。</p><ol><li><p>这些内置函数会要求我们传入另外一个函数；</p></li><li><p>我们自己并不会显示的调用这些函数，而且 JavaScript 内部或者第三方库内部会帮助我们执行；</p></li><li><p>这些函数中的 this 又是如何绑定的呢？</p></li><li><p>setTimeout、数组的 forEach、div 的点击</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 内置函数(第三方库): 根据一些经验</span></span><br><span class="line">  <span class="comment">// 1.定时器</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;定时器函数:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">  &#125;, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.按钮的点击监听</span></span><br><span class="line">  <span class="keyword">var</span> btnEl = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;button&quot;</span>)</span><br><span class="line">  btnEl.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;btn的点击:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  btnEl.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;btn的点击:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// // 3.forEach</span></span><br><span class="line">  <span class="keyword">var</span> names = [<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;cba&quot;</span>, <span class="string">&quot;nba&quot;</span>]</span><br><span class="line">  names.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;forEach:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">  &#125;, <span class="string">&quot;aaaa&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="new-绑定"><a href="#new-绑定" class="headerlink" title="new 绑定"></a>new 绑定</h2><ul><li><p>JavaScript 中的函数可以当做一个类的构造函数来使用，也就是使用 new 关键字。</p></li><li><p>使用 new 关键字来调用函数是，会执行如下的操作：</p><ol><li><p>创建一个全新的对象；</p></li><li><p>这个新对象会被执行 prototype 连接；</p></li><li><p>这个新对象会绑定到函数调用的 this 上（this 的绑定在这个步骤完成）；</p></li><li><p>如果函数没有返回其他对象，表达式会返回这个新对象；</p></li></ol></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">      1.创建新的空对象</span></span><br><span class="line"><span class="comment">      2.将this指向这个空对象</span></span><br><span class="line"><span class="comment">      3.执行函数体中的代码</span></span><br><span class="line"><span class="comment">      4.没有显示返回非空对象时, 默认返回这个对象</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&quot;why&quot;</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo函数:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">new</span> <span class="title function_">foo</span>()</span><br></pre></td></tr></table></figure><h2 id="规则优先级"><a href="#规则优先级" class="headerlink" title="规则优先级"></a>规则优先级</h2><ul><li><p>学习了四条规则，接下来开发中我们只需要去查找函数的调用应用了哪条规则即可，但是如果一个函数调用位置应用了多条规则，优先级谁更高呢？</p></li><li><p>默认规则的优先级最低</p><ol><li>毫无疑问，默认规则的优先级是最低的，因为存在其他规则时，就会通过其他规则的方式来绑定 this</li></ol></li><li><p>显示绑定优先级高于隐式绑定</p><ol><li>代码测试</li></ol></li><li><p>new 绑定优先级高于隐式绑定</p><ol><li>代码测试</li></ol></li><li><p>new 绑定优先级高于 bind</p><ol><li><p>new 绑定和 call、apply 是不允许同时使用的，所以不存在谁的优先级更高</p></li><li><p>new 绑定可以和 bind 一起使用，new 绑定优先级更高</p></li><li><p>代码测试</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 比较优先级:</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1.显式绑定绑定的优先级高于隐式绑定</span></span><br><span class="line">  <span class="comment">// 1.1.测试一:apply高于默认绑定</span></span><br><span class="line">  <span class="keyword">var</span> obj = &#123; <span class="attr">foo</span>: foo &#125;</span><br><span class="line">  obj.<span class="property">foo</span>.<span class="title function_">apply</span>(<span class="string">&quot;abc&quot;</span>)</span><br><span class="line">  obj.<span class="property">foo</span>.<span class="title function_">call</span>(<span class="string">&quot;abc&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1.2.测试二:bind高于默认绑定</span></span><br><span class="line">  <span class="keyword">var</span> bar = foo.<span class="title function_">bind</span>(<span class="string">&quot;aaa&quot;</span>)</span><br><span class="line">  <span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;why&quot;</span>,</span><br><span class="line">    <span class="attr">baz</span>: bar</span><br><span class="line">  &#125;</span><br><span class="line">  obj.<span class="title function_">baz</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.new绑定优先级高于隐式绑定</span></span><br><span class="line">  <span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;why&quot;</span>,</span><br><span class="line">    <span class="attr">foo</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo:&quot;</span>, <span class="variable language_">this</span> === obj)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">new</span> obj.<span class="title function_">foo</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3.new/显式</span></span><br><span class="line">  <span class="comment">// 3.1. new不可以和apply/call一起使用</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3.2. new优先级高于bind</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> bindFn = foo.<span class="title function_">bind</span>(<span class="string">&quot;aaa&quot;</span>)</span><br><span class="line">  <span class="keyword">new</span> <span class="title function_">bindFn</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.bind/apply优先级</span></span><br><span class="line">  <span class="comment">// bind优先级高于apply/call</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> bindFn = foo.<span class="title function_">bind</span>(<span class="string">&quot;aaa&quot;</span>)</span><br><span class="line">  bindFn.<span class="title function_">call</span>(<span class="string">&quot;bbb&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="this-规则之外-–-忽略显示绑定"><a href="#this-规则之外-–-忽略显示绑定" class="headerlink" title="this 规则之外 – 忽略显示绑定"></a>this 规则之外 – 忽略显示绑定</h2><ul><li>我们讲到的规则已经足以应付平时的开发，但是总有一些语法，超出了我们的规则之外。（神话故事和动漫中总是有类似这样的</li></ul><p>人物）</p><ul><li><p>情况一：如果在显示绑定中，我们传入一个 null 或者 undefined，那么这个显示绑定会被忽略，使用默认规则</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.情况一: 显式绑定null/undefined, 那么使用的规则是默认绑定</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  foo.<span class="title function_">apply</span>(<span class="string">&quot;abc&quot;</span>)</span><br><span class="line">  foo.<span class="title function_">apply</span>(<span class="literal">null</span>)</span><br><span class="line">  foo.<span class="title function_">apply</span>(<span class="literal">undefined</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.情况二: 间接函数引用</span></span><br><span class="line">  <span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;obj1&quot;</span>,</span><br><span class="line">    <span class="attr">foo</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;obj2&quot;</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// &#123;&#125;[]()</span></span><br><span class="line"></span><br><span class="line">  obj2.<span class="property">foo</span> = obj1.<span class="property">foo</span></span><br><span class="line">  obj2.<span class="title function_">foo</span>()</span><br><span class="line">  (obj2.<span class="property">foo</span> = obj1.<span class="property">foo</span>)()</span><br></pre></td></tr></table></figure></li></ul><h2 id="this-规则之外-间接函数引用"><a href="#this-规则之外-间接函数引用" class="headerlink" title="this 规则之外 - 间接函数引用"></a>this 规则之外 - 间接函数引用</h2><ul><li><p>情况二：创建一个函数的 间接引用，这种情况使用默认绑定规则。</p><ol><li><p>赋值(obj2.foo = obj1.foo)的结果是 foo 函数；</p></li><li><p>foo 函数被直接调用，那么是默认绑定；</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&quot;obj1&quot;</span>,</span><br><span class="line">  <span class="attr">foo</span>:foo</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 =&#123;</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&quot;obj2&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">obj1.<span class="title function_">foo</span>();<span class="comment">//obj1对象</span></span><br><span class="line">(obj2.<span class="property">foo</span> = onj1.<span class="property">foo</span>)();<span class="comment">//window</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="箭头函数-arrow-function"><a href="#箭头函数-arrow-function" class="headerlink" title="箭头函数 arrow function"></a>箭头函数 arrow function</h2><ul><li><p>箭头函数是 ES6 之后增加的一种编写函数的方法，并且它比函数表达式要更加简洁：</p><ol><li><p>箭头函数不会绑定 this、arguments 属性；</p></li><li><p>箭头函数不能作为构造函数来使用（不能和 new 一起来使用，会抛出错误）；</p></li></ol></li><li><p>箭头函数如何编写呢？</p><ol><li><p>(): 函数的参数</p></li><li><p>{}: 函数的执行体</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">muns.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index,arr</span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><h2 id="箭头函数的编写优化"><a href="#箭头函数的编写优化" class="headerlink" title="箭头函数的编写优化"></a>箭头函数的编写优化</h2><ul><li><p>优化一: 如果只有一个参数()可以省略</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nums.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span>&#123;&#125;)</span><br></pre></td></tr></table></figure></li><li><p>优化二: 如果函数执行体中只有一行代码, 那么可以省略大括号</p><ol><li>并且这行代码的返回值会作为整个函数的返回值</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nums.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span><span class="variable language_">console</span>.<span class="title function_">log</span>(item))</span><br><span class="line">nums.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span><span class="literal">true</span>)</span><br></pre></td></tr></table></figure></li><li><p>优化三: 如果函数执行体只有返回一个对象, 那么需要给这个对象加上()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title function_">foo</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">  retrun &#123; <span class="attr">name</span>:<span class="string">&quot;abc&quot;</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> <span class="title function_">bar</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&quot;abc&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="this-规则之外-–-ES6-箭头函数"><a href="#this-规则之外-–-ES6-箭头函数" class="headerlink" title="this 规则之外 – ES6 箭头函数"></a>this 规则之外 – ES6 箭头函数</h2><ul><li><p>箭头函数不使用 this 的四种标准规则（也就是不绑定 this），而是根据外层作用域来决定 this。</p><ol><li><p>我们来看一个模拟网络请求的案例：</p></li><li><p>这里我使用 setTimeout 来模拟网络请求，请求到数据后如何可以存放到 data 中呢？</p></li><li><p>我们需要拿到 obj 对象，设置 data；</p></li><li><p>但是直接拿到的 this 是 window，我们需要在外层定义：var _this = this</p></li><li><p>在 setTimeout 的回调函数中使用_this 就代表了 obj 对象</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">data</span>: [],</span><br><span class="line">  <span class="attr">getData</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="comment">//模拟获取到的数据</span></span><br><span class="line">      <span class="keyword">var</span> res = [<span class="string">&quot;abc&quot;</span>,<span class="string">&quot;cba&quot;</span>,<span class="string">&quot;nba&quot;</span>];</span><br><span class="line">      _this.<span class="property">data</span>.<span class="title function_">push</span>(...res)</span><br><span class="line">    &#125;,<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.情况一: 显式绑定null/undefined, 那么使用的规则是默认绑定</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  foo.<span class="title function_">apply</span>(<span class="string">&quot;abc&quot;</span>)</span><br><span class="line">  foo.<span class="title function_">apply</span>(<span class="literal">null</span>)</span><br><span class="line">  foo.<span class="title function_">apply</span>(<span class="literal">undefined</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.情况二: 间接函数引用</span></span><br><span class="line">  <span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;obj1&quot;</span>,</span><br><span class="line">    <span class="attr">foo</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;obj2&quot;</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// &#123;&#125;[]()</span></span><br><span class="line"></span><br><span class="line">  obj2.<span class="property">foo</span> = obj1.<span class="property">foo</span></span><br><span class="line">  obj2.<span class="title function_">foo</span>()</span><br><span class="line">  (obj2.<span class="property">foo</span> = obj1.<span class="property">foo</span>)()</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.之前的方式</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">foo1</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line">  <span class="keyword">var</span> foo2 = <span class="keyword">function</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;函数体代码&quot;</span>, <span class="variable language_">this</span>, <span class="variable language_">arguments</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(name, age)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.箭头函数完整写法</span></span><br><span class="line">  <span class="keyword">var</span> <span class="title function_">foo3</span> = (<span class="params">name, age</span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;箭头函数的函数体&quot;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(name, age)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3.箭头函数的练习</span></span><br><span class="line">  <span class="comment">// 3.1. forEach</span></span><br><span class="line">  <span class="keyword">var</span> names = [<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;cba&quot;</span>, <span class="string">&quot;nba&quot;</span>]</span><br><span class="line">  names.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index, arr</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(item, index, arr)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">// 3.2. setTimeout</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;setTimeout&quot;</span>)</span><br><span class="line">  &#125;, <span class="number">3000</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> names = [<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;cba&quot;</span>, <span class="string">&quot;nba&quot;</span>]</span><br><span class="line">  <span class="keyword">var</span> nums = [<span class="number">20</span>, <span class="number">30</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">111</span>]</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1.优化一: 如果箭头函数只有一个参数, 那么()可以省略</span></span><br><span class="line">  names.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(item)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">var</span> newNums = nums.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> item % <span class="number">2</span> === <span class="number">0</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2.优化二: 如果函数体中只有一行执行代码, 那么&#123;&#125;可以省略</span></span><br><span class="line">  names.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(item))</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 一行代码中不能带return关键字, 如果省略, 需要带return一起省略(下一条规则)</span></span><br><span class="line">  <span class="keyword">var</span> newNums = nums.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> item % <span class="number">2</span> === <span class="number">0</span></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3.优化三: 只有一行代码时, 这行代码的表达式结果会作为函数的返回值默认返回的</span></span><br><span class="line">  <span class="keyword">var</span> newNums = nums.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item % <span class="number">2</span> === <span class="number">0</span>)</span><br><span class="line">  <span class="keyword">var</span> newNums = nums.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item % <span class="number">2</span> === <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 4.优化四: 如果默认返回值是一个对象, 那么这个对象必须加()</span></span><br><span class="line">  <span class="comment">// 注意: 在react中我会经常使用 redux</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> <span class="title function_">arrFn</span> = (<span class="params"></span>) =&gt; [<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;cba&quot;</span>]</span><br><span class="line">  <span class="keyword">var</span> <span class="title function_">arrFn</span> = (<span class="params"></span>) =&gt; &#123;&#125; <span class="comment">// 注意: 这里是&#123;&#125;执行体</span></span><br><span class="line">  <span class="keyword">var</span> <span class="title function_">arrFn</span> = (<span class="params"></span>) =&gt; (&#123; <span class="attr">name</span>: <span class="string">&quot;why&quot;</span> &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">arrFn</span>())</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 箭头函数实现nums的所有偶数平方的和</span></span><br><span class="line">  <span class="keyword">var</span> nums = [<span class="number">20</span>, <span class="number">30</span>, <span class="number">11</span>, <span class="number">15</span>, <span class="number">111</span>]</span><br><span class="line">  <span class="keyword">var</span> result = nums.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item % <span class="number">2</span> === <span class="number">0</span>)</span><br><span class="line">                   .<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> item * item)</span><br><span class="line">                   .<span class="title function_">reduce</span>(<span class="function">(<span class="params">prevValue, item</span>) =&gt;</span> prevValue + item)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span><br></pre></td></tr></table></figure></li></ul><h2 id="ES6-箭头函数-this"><a href="#ES6-箭头函数-this" class="headerlink" title="ES6 箭头函数 this"></a>ES6 箭头函数 this</h2><ul><li><p>之前的代码在 ES6 之前是我们最常用的方式，从 ES6 开始，我们会使用箭头函数：</p><ol><li><p>为什么在 setTimeout 的回调函数中可以直接使用 this 呢？</p></li><li><p>因为箭头函数并不绑定 this 对象，那么 this 引用就会从上层作用于中找到对应的 this</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">data</span>: [],</span><br><span class="line">  <span class="attr">getData</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="comment">//模拟获取到的数据</span></span><br><span class="line">      <span class="keyword">var</span> res = [<span class="string">&quot;abc&quot;</span>,<span class="string">&quot;cba&quot;</span>,<span class="string">&quot;nba&quot;</span>];</span><br><span class="line">      _this.<span class="property">data</span>.<span class="title function_">push</span>(...res)</span><br><span class="line">    &#125;,<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  <span class="attr">data</span>:[],</span><br><span class="line">  <span class="attr">getData</span>: <span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);<span class="comment">//window</span></span><br><span class="line">    &#125;,<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>思考：如果 getData 也是一个箭头函数，那么 setTimeout 中的回调函数中的 this 指向谁呢？</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.普通函数中是有this的标识符</span></span><br><span class="line"> <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;foo&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="title function_">foo</span>()</span><br><span class="line"> foo.<span class="title function_">apply</span>(<span class="string">&quot;aaa&quot;</span>)</span><br><span class="line"></span><br><span class="line"> <span class="comment">// 2.箭头函数中, 压根没有this</span></span><br><span class="line"> <span class="keyword">var</span> <span class="title function_">bar</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;bar:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="title function_">bar</span>()</span><br><span class="line"> <span class="comment">// 通过apply调用时, 也是没有this</span></span><br><span class="line"> bar.<span class="title function_">apply</span>(<span class="string">&quot;aaaa&quot;</span>)</span><br><span class="line"></span><br><span class="line"> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;全局this:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line"> <span class="keyword">var</span> message = <span class="string">&quot;global message&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// 3.this的查找规则</span></span><br><span class="line"> <span class="keyword">var</span> obj = &#123;</span><br><span class="line">   <span class="attr">name</span>: <span class="string">&quot;obj&quot;</span>,</span><br><span class="line">   <span class="attr">foo</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">     <span class="keyword">var</span> <span class="title function_">bar</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;bar:&quot;</span>, <span class="variable language_">this</span>)</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> bar</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">var</span> fn = obj.<span class="title function_">foo</span>()</span><br><span class="line"> fn.<span class="title function_">apply</span>(<span class="string">&quot;bbb&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 网络请求的工具函数</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">request</span>(<span class="params">url, callbackFn</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> results = [<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;cba&quot;</span>, <span class="string">&quot;nba&quot;</span>]</span><br><span class="line">    <span class="title function_">callbackFn</span>(results)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 实际操作的位置(业务)</span></span><br><span class="line">  <span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">names</span>: [],</span><br><span class="line">    <span class="attr">network</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 1.早期的时候</span></span><br><span class="line">      <span class="keyword">var</span> _this = <span class="variable language_">this</span></span><br><span class="line">      <span class="title function_">request</span>(<span class="string">&quot;/names&quot;</span>, <span class="keyword">function</span>(<span class="params">res</span>) &#123;</span><br><span class="line">        _this.<span class="property">names</span> = [].<span class="title function_">concat</span>(res)</span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2.箭头函数写法</span></span><br><span class="line">      <span class="title function_">request</span>(<span class="string">&quot;/names&quot;</span>, <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">names</span> = [].<span class="title function_">concat</span>(res)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  obj.<span class="title function_">network</span>()</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/css/kslink.css"/>
      <url>/css/kslink.css</url>
      
        <content type="html"><![CDATA[/* 添加友链按钮 *//* 快速填写格式 */.addBtn {  display: flex;  justify-content: center;  flex-wrap: wrap;}.addBtn button {  transition: .2s;  display: flex;  margin: 5px auto;  color: var(--global-bg);  padding: 15px;  border-radius: 40px;  background: var(--search-result-title);  align-items: center;}button {  padding: 0;  outline: 0;  border: none;  background: 0 0;  cursor: pointer;  touch-action: manipulation;}.fa-solid, .fas {  font-family: "Font Awesome 6 Free";  font-weight: 900;}.addBtn i {  font-size: 1.3rem;  margin-right: 10px;}.addBtn button:hover {  background: var(--theme-color);  color: #fff;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<!-- GitCalendar容器 --><div id="gitZone"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[:root {  --trans-light: rgba(255, 255, 255, 0.88);  --trans-dark: rgba(25, 25, 25, 0.88);  --border-style: 1px solid rgb(169, 169, 169);  --backdrop-filter: blur(20px) saturate(150%);  /* --backdrop-filter: none */  --blue-custom: #5ea6e5;  --loading-color: rgba(207, 246, 247, 0.92);  --border-color: #c9c9c9;  --color-red: rgb(241, 71, 71);  --color-orange: rgb(241, 162, 71);  --color-yellow: rgb(241, 238, 71);  --color-purple: rgb(179, 71, 241);  --color-blue: rgb(102, 204, 255);  --color-gray: rgb(226, 226, 226);  --color-green: rgb(57, 197, 187);  --color-whitegray: rgb(241, 241, 241);  --color-pink: rgb(237, 112, 155);  --color-black: rgb(0, 0, 0);  --color-darkblue: rgb(97, 100, 159);  --color-heoblue: rgb(66, 90, 239);  --btn-bg: var(--theme-color)!important;  --scrollbar-color: var(--theme-color)!important;  --border-style: 1px solid rgba(169, 169, 169, 0.7);  --hlnumber-bg: #282c34;  --hltools-bg: #1c1c1c;  --hl-bg: #282c34;}/* 全局宽度 */.layout {  max-width: 1400px;}/* 侧边卡片栏宽度 */.aside-content {  max-width: 318px;  min-width: 300px;}/* 平板尺寸自适应(不启用侧边栏宽度限制) */@media screen and (max-width: 900px) {  .aside-content {    max-width: none !important;    padding: 0 5px 0 5px;  }}/* 除了首页以外其他页面隐藏卡片，并采用宽屏显示 */#archive,#page,#category,#tag {  width: 100%;}.page:not(.page.home) .aside-content {  display: none;}/* 文章页H1-H6图标样式效果 *//* 控制风车转动速度 4s那里可以自己调节快慢 */h1::before,h2::before,h3::before,h4::before,h5::before,h6::before {  -webkit-animation: ccc 4s linear infinite;  animation: ccc 4s linear infinite;}/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */@-webkit-keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}@keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}/* 设置风车颜色 */#content-inner.layout h1::before {  color: #ef50a8;  margin-left: -1.55rem;  font-size: 1.3rem;  margin-top: -0.23rem;}#content-inner.layout h2::before {  color: #fb7061;  margin-left: -1.35rem;  font-size: 1.1rem;  margin-top: -0.12rem;}#content-inner.layout h3::before {  color: #ffbf00;  margin-left: -1.22rem;  font-size: 0.95rem;  margin-top: -0.09rem;}#content-inner.layout h4::before {  color: #a9e000;  margin-left: -1.05rem;  font-size: 0.8rem;  margin-top: -0.09rem;}#content-inner.layout h5::before {  color: #57c850;  margin-left: -0.9rem;  font-size: 0.7rem;  margin-top: 0rem;}#content-inner.layout h6::before {  color: #5ec1e0;  margin-left: -0.9rem;  font-size: 0.66rem;  margin-top: 0rem;}/* s设置风车hover动效 6s那里可以自己调节快慢*/#content-inner.layout h1:hover,#content-inner.layout h2:hover,#content-inner.layout h3:hover,#content-inner.layout h4:hover,#content-inner.layout h5:hover,#content-inner.layout h6:hover {  color: var(--theme-color);}#content-inner.layout h1:hover::before,#content-inner.layout h2:hover::before,#content-inner.layout h3:hover::before,#content-inner.layout h4:hover::before,#content-inner.layout h5:hover::before,#content-inner.layout h6:hover::before {  color: var(--theme-color);  -webkit-animation: ccc 6s linear infinite;  animation: ccc 6s linear infinite;}/* 页脚与头图透明 */#footer {  background: transparent !important;}#page-header {  background: transparent !important;}/* 白天模式遮罩透明 */#footer::before {  background: transparent !important;}#page-header::before {  background: transparent !important;}/* 夜间模式遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}/* 小冰分类分类磁铁黑夜模式适配 *//* 一般状态 */[data-theme="dark"] .magnet_link_context {  background: #1e1e1e;  color: antiquewhite;}/* 鼠标悬浮状态 */[data-theme="dark"] .magnet_link_context:hover {  background: #3ecdf1;  color: #f2f2f2;}@font-face {  /* 为载入的字体取名字(随意) */  font-family: 'YSHST';  /* 字体文件地址(相对或者绝对路径都可以) */  src: url(/font/优设好身体.woff2);  /* 定义加粗样式(加粗多少) */  font-weight: normal;  /* 定义字体样式(斜体/非斜体) */  font-style: normal;  /* 定义显示样式 */  font-display: block;}/* 翻页按钮居中 */#pagination {  width: 100%;  margin: auto;}/* 一级菜单居中 */#nav .menus_items {  position: absolute !important;  width: fit-content !important;  left: 50% !important;  transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {  display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(5) .menus_item_child {  left: -36px;}/* 夜间模式菜单栏发光字 */[data-theme="dark"] #nav .site-page,[data-theme="dark"] #nav .menus_items .menus_item .menus_item_child li a {  text-shadow: 0 0 2px rgb(179,71,241) !important;}/* 手机端适配 */[data-theme="dark"] #sidebar #sidebar-menus .menus_items .site-page {  text-shadow: 0 0 2px rgb(179,71,241) !important;}/* 闪烁变动颜色连续渐变 */#site-name,#site-title,#site-subtitle,#post-info,.author-info__name,.author-info__description {  transition: text-shadow 1s linear !important;}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}/* 鼠标样式 */#cursor {  position: fixed;  width: 16px;  height: 16px;  /* 这里改变跟随的底色 */  background: rgb(57, 197, 187);  border-radius: 8px;  opacity: 0.25;  z-index: 10086;  pointer-events: none;  transition: 0.2s ease-in-out;  transition-property: background, opacity, transform;}#cursor.hidden {  opacity: 0;}#cursor.hover {  opacity: 0.1;  transform: scale(2.5);  -webkit-transform: scale(2.5);  -moz-transform: scale(2.5);  -ms-transform: scale(2.5);  -o-transform: scale(2.5);}#cursor.active {  opacity: 0.5;  transform: scale(0.5);  -webkit-transform: scale(0.5);  -moz-transform: scale(0.5);  -ms-transform: scale(0.5);  -o-transform: scale(0.5);}/* 首页文章卡片 */#recent-posts > .recent-post-item {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 25px;  border: var(--border-style);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 18px;  border: var(--border-style);}/* 文章页、归档页、普通页面 */div#post,div#page,div#archive {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border: var(--border-style);  border-radius: 20px;}/* 导航栏 */#page-header.nav-fixed #nav {  background: rgba(255, 255, 255, 0.75);  backdrop-filter: var(--backdrop-filter);}[data-theme="dark"] #page-header.nav-fixed #nav {  background: rgba(0, 0, 0, 0.7) !important;}/* 夜间模式遮罩 */[data-theme="dark"] #recent-posts > .recent-post-item,[data-theme="dark"] #aside-content .card-widget,[data-theme="dark"] div#post,[data-theme="dark"] div#archive,[data-theme="dark"] div#page {  background: var(--trans-dark);}/* 夜间模式页脚页头遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}/* 阅读模式 */.read-mode #aside-content .card-widget {  background: rgba(158, 204, 171, 0.5) !important;}.read-mode div#post {  background: rgba(158, 204, 171, 0.5) !important;}/* 夜间模式下的阅读模式 */[data-theme="dark"] .read-mode #aside-content .card-widget {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}[data-theme="dark"] .read-mode div#post {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}/* 图标大小 */svg.menu_icon {  width: 1.38em;  height: 1.28em;  vertical-align: -0.15em;  fill: currentColor;  overflow: hidden;}svg.social_icon {  width: 1.38em;  height: 1.28em;  vertical-align: -0.15em;  fill: currentColor;  overflow: hidden;}.pace {  -webkit-pointer-events: none;  pointer-events: none;  -webkit-user-select: none;  -moz-user-select: none;  user-select: none;  z-index: 2000;  position: fixed;  margin: auto;  top: 4px;  left: 0;  right: 0;  height: 8px;  border-radius: 8px;  width: 7rem;  background: #eaecf2;  border: 1px #e3e8f7;  overflow: hidden}.pace-inactive .pace-progress {  opacity: 0;  transition: .3s ease-in}.pace .pace-progress {  -webkit-box-sizing: border-box;  -moz-box-sizing: border-box;  -ms-box-sizing: border-box;  -o-box-sizing: border-box;  box-sizing: border-box;  -webkit-transform: translate3d(0, 0, 0);  -moz-transform: translate3d(0, 0, 0);  -ms-transform: translate3d(0, 0, 0);  -o-transform: translate3d(0, 0, 0);  transform: translate3d(0, 0, 0);  max-width: 200px;  position: absolute;  z-index: 2000;  display: block;  top: 0;  right: 100%;  height: 100%;  width: 100%;  /* linear-gradient(to right, #3494e6, #ec6ead) */  background: linear-gradient(to right, #43cea2, #3866ca);  animation: gradient 2s ease infinite;  background-size: 200%}.pace.pace-inactive {  opacity: 0;  transition: .3s;  top: -8px}#owo-big {  position: fixed;  align-items: center;  background-color: rgb(255, 255, 255);  border: 1px #aaa solid;  border-radius: 10px;  z-index: 9999;  display: none;  transform: translate(0, -105%);  overflow: hidden;  animation: owoIn 0.3s cubic-bezier(0.42, 0, 0.3, 1.11);}[data-theme=dark] #owo-big {  background-color: #4a4a4a}#owo-big img {  width: 100%;}/* 动画效果代码由 Heo：https://blog.zhheo.com/ 提供 */@keyframes owoIn {  0% {      transform: translate(0, -95%);      opacity: 0;  }  100% {      transform: translate(0, -105%);      opacity: 1;  }}/* 设置文字内容 :nth-child(1)的作用是选择第几个 */.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(1):before {  content: '输入QQ号会自动获取昵称和头像🐧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(2):before {  content: '收到回复将会发送到您的邮箱📧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(3):before {  content: '可以通过昵称访问您的网站🔗';}/* 当用户点击输入框时显示 */.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::before,.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::after {  display: block;}/* 主内容区 */.el-input.el-input--small.el-input-group.el-input-group--prepend::before {  /* 先隐藏起来 */  display: none;  /* 绝对定位 */  position: absolute;  /* 向上移动60像素 */  top: -60px;  /* 文字强制不换行，防止left:50%导致的文字换行 */  white-space: nowrap;  /* 圆角 */  border-radius: 10px;  /* 距离左边50% */  left: 50%;  /* 然后再向左边挪动自身的一半，即可实现居中 */  transform: translate(-50%);  /* 填充 */  padding: 14px 18px;  background: #444;  color: #fff;}/* 小角标 */.el-input.el-input--small.el-input-group.el-input-group--prepend::after {  display: none;  content: '';  position: absolute;  /* 内容大小（宽高）为0且边框大小不为0的情况下，每一条边（4个边）都是一个三角形，组成一个正方形。  我们先将所有边框透明，再给其中的一条边添加颜色就可以实现小三角图标 */  border: 12px solid transparent;  border-top-color: #444;  left: 50%;  transform: translate(-50%, -48px);}.card-info-avatar .author-status-box {  position: absolute;  bottom: 0;  left: calc(100% - 28px);  width: 28px;  height: 28px;  border: 1px solid #d0d7de;  border-radius: 2em;  background-color: #f8f8f8f8;  transition: 0.4s;  overflow: hidden;}[data-theme="dark"] .card-info-avatar .author-status-box {  background-color: #222222f2;  border: 1px solid #5c6060;}.card-info-avatar .author-status-box .author-status {  display: flex;  align-items: center;  justify-content: center;  height: 28px;  padding: 0 5px;}.card-info-avatar .author-status-box:hover {  width: 105px;}.card-info-avatar .author-status-box:hover .author-status span {  width: 105px;  margin-left: 4px;}.card-info-avatar .author-status-box .author-status span {  width: 0;  font-size: 12px;  height: 100%;  overflow: hidden;  text-overflow: ellipsis;  white-space: nowrap;  transition: 0.4s;}.card-widget .card-info-avatar {  display: inline-block;  position: relative;}/* 头像呼吸灯 */[data-theme="light"] .avatar-img {  animation: huxi_light 4s ease-in-out infinite;}[data-theme="dark"] .avatar-img {  animation: huxi_dark 4s ease-in-out infinite;}@keyframes huxi_light {  0% {    box-shadow: 0px 0px 1px 1px #e9f5fa;  }  50% {    box-shadow: 0px 0px 5px 5px #e9f5fa;  }  100% {    box-shadow: 0px 0px 1px 1px #e9f5fa;  }}@keyframes huxi_dark {  0% {    box-shadow: 0px 0px 1px 1px #39c5bb;  }  50% {    box-shadow: 0px 0px 5px 5px #39c5bb;  }  100% {    box-shadow: 0px 0px 1px 1px #39c5bb;  }}/* 帧率检测 */#fps {  position: fixed;  /* 指定位置 */  left: 10px;  bottom: 10px;  z-index: 1919810;}[data-theme="light"] #fps {  background-color: rgba(255, 255, 255, 0.85);  backdrop-filter: var(--backdrop-filter);  padding: 4px;  border-radius: 4px;}[data-theme="dark"] #fps {  background-color: rgba(0, 0, 0, 0.72);  backdrop-filter: var(--backdrop-filter);  padding: 4px;  border-radius: 4px;}/* 波浪css */.main-hero-waves-area {  width: 100%;  position: absolute;  left: 0;  bottom: -11px;  z-index: 5;}.waves-area .waves-svg {  width: 100%;  height: 5rem;}/* Animation */.parallax > use {  animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;}.parallax > use:nth-child(1) {  animation-delay: -2s;  animation-duration: 7s;  fill: #f7f9febd;}.parallax > use:nth-child(2) {  animation-delay: -3s;  animation-duration: 10s;  fill: #f7f9fe82;}.parallax > use:nth-child(3) {  animation-delay: -4s;  animation-duration: 13s;  fill: #f7f9fe36;}.parallax > use:nth-child(4) {  animation-delay: -5s;  animation-duration: 20s;  fill: #f7f9fe;}/* 黑色模式背景 */[data-theme="dark"] .parallax > use:nth-child(1) {  animation-delay: -2s;  animation-duration: 7s;  fill: #18171dc8;}[data-theme="dark"] .parallax > use:nth-child(2) {  animation-delay: -3s;  animation-duration: 10s;  fill: #18171d80;}[data-theme="dark"] .parallax > use:nth-child(3) {  animation-delay: -4s;  animation-duration: 13s;  fill: #18171d3e;}[data-theme="dark"] .parallax > use:nth-child(4) {  animation-delay: -5s;  animation-duration: 20s;  fill: #18171d;}@keyframes move-forever {  0% {    transform: translate3d(-90px, 0, 0);  }  100% {    transform: translate3d(85px, 0, 0);  }}/*Shrinking for mobile*/@media (max-width: 768px) {  .waves-area .waves-svg {    height: 40px;    min-height: 40px;  }}/* 滚动条样式 */::-webkit-scrollbar {  width: 8px;  height: 8px;}::-webkit-scrollbar-track {  background-color: rgba(73, 177, 245, 0.2);  border-radius: 2em;}::-webkit-scrollbar-thumb {  background-color: var(--theme-color);  background-image: -webkit-linear-gradient(    45deg,    rgba(255, 255, 255, 0.4) 25%,    transparent 25%,    transparent 50%,    rgba(255, 255, 255, 0.4) 50%,    rgba(255, 255, 255, 0.4) 75%,    transparent 75%,    transparent  );  border-radius: 2em;}::-webkit-scrollbar-corner {  background-color: transparent;}::-moz-selection {  color: #fff;  background-color: var(--theme-color);}/* 雪花特效 */[data-theme="light"] #snow{  display: block;  position: fixed;  left: 0;  top: 0;  width: 100%;  height: 100%;  pointer-events: none;  z-index: -2;}/* 雪花黑夜模式不显示 */[data-theme="dark"] #snow{  display: none;}/* 新年侧边栏 */#newYear {  color: white;  padding: 0 !important;}#newYear p,#newYear h3 {  font-weight: normal;  color: inherit;  margin: 0;}#newYear .item-headline {  display: none;}#newYear-main {  min-height: 160px;  padding: 1rem;  position: relative;  border-radius: 12px;  background-image: url(https://tuchuang.voooe.cn/images/2023/01/02/tunian.webp);  background-size: cover;  background-position: center;}#newYear-main * {  position: relative;  line-height: 1.3;}#newYear-main .newYear-time {  font-weight: bold;  text-align: center;}#newYear-main .time,#newYear-main .happyNewYear {  font-size: 3.5rem;  margin: 1rem 0;  display: block;}#newYear-main .day {  font-size: 5rem;}#newYear-main .day .unit {  font-size: 1rem;}#newYear-main .mask {  position: absolute;  left: 0;  top: 0;  height: 100%;  width: 100%;  background-color: rgba(0, 0, 0, .1);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/readPercent.css"/>
      <url>/css/readPercent.css</url>
      
        <content type="html"><![CDATA[/* 返回顶部 */button#go-up #percent {  display: none;  font-weight: bold;  font-size: 15px !important;}button#go-up span {  font-size: 12px!important;  margin-right: -1px;}/* 鼠标滑动到按钮上时显示返回顶部图标 */button#go-up:hover i {  display: block !important;}button#go-up:hover #percent {  display: none !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cursor.js"/>
      <url>/js/cursor.js</url>
      
        <content type="html"><![CDATA[// 防抖全局计时器let TT = null;    //time用来控制事件的触发// 防抖函数:fn->逻辑 time->防抖时间function debounce(fn, time) {    if (TT !== null) clearTimeout(TT);    TT = setTimeout(fn, time);}// 复制提醒document.addEventListener("copy", function () {    debounce(function () {        new Vue({            data: function () {                this.$notify({                    title: "哎嘿！复制成功🍬",                    message: "若要转载最好保留原文链接哦，给你一个大大的赞！",                    position: 'top-left',                    offset: 50,                    showClose: true,                    type: "success",                    duration: 3000                });            }        })    }, 300);})var CURSOR;Math.lerp = (a, b, n) => (1 - n) * a + n * b;const getStyle2 = (el, attr) => {    try {        return window.getComputedStyle            ? window.getComputedStyle(el)[attr]            : el.currentStyle[attr];    } catch (e) {}    return "";};// 为了屏蔽异步加载导致无法读取颜色值，这里统一用哈希表预处理const map = new Map();map.set('red', "rgb(241, 71, 71)");map.set('orange', "rgb(241, 162, 71)");map.set('yellow', "rgb(241, 238, 71)")map.set('purple', "rgb(179, 71, 241)");map.set('blue', "rgb(102, 204, 255)");map.set('gray', "rgb(226, 226, 226)");map.set('green', "rgb(57, 197, 187)");map.set('whitegray', "rgb(241, 241, 241)");map.set('pink', "rgb(237, 112, 155)");map.set('black', "rgb(0, 0, 0)");map.set('darkblue', "rgb(97, 100, 159)");map.set('heoblue', "rgb(66, 90, 239)");class Cursor {    constructor() {        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    move(left, top) {        this.cursor.style["left"] = `${left}px`;        this.cursor.style["top"] = `${top}px`;    }    create() {        if (!this.cursor) {            this.cursor = document.createElement("div");            this.cursor.id = "cursor";            this.cursor.classList.add("hidden");            document.body.append(this.cursor);        }        var el = document.getElementsByTagName('*');        for (let i = 0; i < el.length; i++)            if (getStyle2(el[i], "cursor") == "pointer")                this.pt.push(el[i].outerHTML);        // 为了防止出现黑色鼠标的情况，优先在这里对主题色进行赋值        if (localStorage.getItem("themeColor") == undefined) {            localStorage.setItem("themeColor", "green");        }        var colorVal = map.get(localStorage.getItem("themeColor"));        document.body.appendChild((this.scr = document.createElement("style")));        this.scr.innerHTML = `* {cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' width='8px' height='8px'><circle cx='4' cy='4' r='4' opacity='1.0' fill='`+ colorVal + `'/></svg>") 4 4, auto}`;    }    refresh() {        this.scr.remove();        this.cursor.classList.remove("hover");        this.cursor.classList.remove("active");        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    init() {        document.onmouseover  = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.add("hover");        document.onmouseout   = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.remove("hover");        document.onmousemove  = e => {(this.pos.curr == null) && this.move(e.clientX - 8, e.clientY - 8); this.pos.curr = {x: e.clientX - 8, y: e.clientY - 8}; this.cursor.classList.remove("hidden");};        document.onmouseenter = e => this.cursor.classList.remove("hidden");        document.onmouseleave = e => this.cursor.classList.add("hidden");        document.onmousedown  = e => this.cursor.classList.add("active");        document.onmouseup    = e => this.cursor.classList.remove("active");    }    render() {        if (this.pos.prev) {            // 跟踪速度调节            this.pos.prev.x = Math.lerp(this.pos.prev.x, this.pos.curr.x, 0.15);            this.pos.prev.y = Math.lerp(this.pos.prev.y, this.pos.curr.y, 0.15);            this.move(this.pos.prev.x, this.pos.prev.y);        } else {            this.pos.prev = this.pos.curr;        }        requestAnimationFrame(() => this.render());    }}(() => {    CURSOR = new Cursor();    // 需要重新获取列表时，使用 CURSOR.refresh()})();// 开启计时器window.onload = setInterval(changeColor, 1200);// new Vue({//     data: function () {//         this.$notify({//             title: "你已被发现😜",//             message: "小伙子，扒源记住要遵循GPL协议！",//             position: 'top-left',//             offset: 50,//             showClose: true,//             type: "warning",//             duration: 5000//         });//     }// })]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/lantern.css"/>
      <url>/css/lantern.css</url>
      
        <content type="html"><![CDATA[/* 灯笼 Start */* {  box-sizing: border-box;}/* 移动端显示/隐藏 /none/block，可自定义显示一个 */@media screen and (max-width: 970px) {  .d-box1 {      display: none;  }  .dengl .d-box {      right: 0px;      top: -40px;      /* 自定义灯笼大小 */      transform: scale(0.4);  }}.dengl {  position: fixed;  z-index: 9;}/* .d-box,.d-box1{  z-index: 9;} */.d-box {  position: fixed;  /* 自定义灯笼的位置 */  right: 85px;  top: 0;  /* 自定义灯笼大小 */  transform: scale(0.8);}.d-box1 {  position: fixed;  /* 自定义灯笼的位置 */  left: 0;  top: 0;  /* 自定义灯笼大小 */  transform: scale(0.8);}/* 修改灯笼的字体 */.d-box .d1::after {  content: '兔年大吉';}.d-box1 .d1::after {  content: '心想事成';}.d-box1 .d1,.d-box1 .d2,.d-box1 .d1::after,.d-box1 .d1::before,.d-box1 .d2::after,.d-box1 .d2::before,.d-box1 .d2 ul li span,.d-box1 .d1 ul li span {  background-color: #f01f1a;  border: 5px solid #5c1713;  /* 自定义灯笼的阴影 */  /* box-shadow: 0 5px 61px rgba(255, 240, 29, 0.88); */}.d1,.d2,.d1::after,.d1::before,.d2::after,.d2::before,.d2 ul li span,.d1 ul li span {  background-color: #f01f1a;  border: 5px solid #5c1713;  /* 自定义灯笼的阴影 */  box-shadow: 0 5px 61px #ff1d1d;}.d1::after,.d1::before {  height: 82px;  position: absolute;  top: 0;  content: '';  font-size: 17px;}.d1,.d2 {  position: relative;  animation: swing 4s linear infinite;  transform-origin: top center;}.d1 {  width: 160px;  top: 100px;  height: 90px;  right: 0;  border-radius: 80px/49px;}.d1::before {  top: -5px;  right: 7px;  width: 123px;  border-radius: 62px/52px;}.d1::after {  text-align: center;  line-height: 90px;  color: #ffe31d;  font-weight: 600;  top: -5px;  right: 35px;  width: 69px;  border-radius: 41px/49px;}.d1 span {  position: absolute;  top: 84px;  left: 49px;  width: 50px;  height: 16px;  z-index: 2;  border-radius: 0 0 10px 10px;  background-color: #ffe31d;  border: 5px solid #5c1713;}.d1 span:nth-child(2) {  top: -17px;  border-radius: 10px 10px 0 0;}.d1 p {  position: absolute;  top: -31px;  left: 13px;  width: 16px;  height: 13px;  border-radius: 25px;  border: 5px solid #5c1713;  border-bottom: 0;}.d1 ul {  position: relative;  top: 80px;  left: 13px;  width: 54px;  display: flex;}.d1 li {  flex: 1;  list-style: none;  height: 24px;  margin: 0px 2.5px;  width: 5px;  border-radius: 5px;  border-right: 3.5px solid #5c1713;}.d1 ul li:nth-child(3) {  content: '';  height: 50px;}.d1 ul li:nth-child(3)::before {  content: '';  position: absolute;  top: 47px;  left: 54px;  width: 5px;  height: 5px;  border-radius: 5px 5px 10px 10px;  background-color: #ffe31d;  border: 5px solid #5c1713;}.d1 ul li span {  position: absolute;  top: 20px;  left: 55px;  width: 13px;  height: 19px;  border-radius: 14px;}.d2::after,.d2::before {  position: absolute;  height: 128px;  top: -3px;  content: '';}.d2 {  width: 199px;  height: 128px;  top: -61px;  right: -122px;  border-radius: 98px/70px;}.d2::before {  top: -8px;  right: 18px;  width: 143px;  border-radius: 69px/67px;}/* 自定义背景图片 */.d2::after {  top: -8px;  right: 51px;  width: 75px;  border-radius: 57px/89px;  background: url(https://tuchuang.voooe.cn/images/2023/01/01/e6f0b2a0d44bbfb2de864b7d25cfe0ff.webp) no-repeat;  background-position: center;  background-size: 105px auto;}.d2 span {  position: absolute;  top: 123px;  left: 68px;  width: 55px;  height: 14px;  z-index: 2;  border-radius: 0 0 10px 10px;  background-color: #ffe31d;  border: 5px solid #5c1713;}.d2 span:nth-child(2) {  top: -16px;  border-radius: 10px 10px 0 0;}.d2 p {  position: absolute;  top: -32px;  left: 13px;  width: 19px;  height: 13px;  border-radius: 25px;  border: 5px solid #5c1713;  border-bottom: 0;}.d2 ul {  position: relative;  top: 121px;  left: 32px;  width: 53px;  display: flex;}.d2 li {  flex: 1;  list-style: none;  height: 24px;  margin: 0px 3px;  width: 4px;  border-radius: 7px;  border-right: 3px solid #5c1713;}.d2 ul li:nth-child(3) {  content: '';  height: 60px;}.d2 ul li:nth-child(3)::before {  content: '';  position: absolute;  top: 59px;  left: 53px;  width: 9px;  height: 6px;  border-radius: 5px 5px 10px 10px;  background-color: #ffe31d;  border: 5px solid #5c1713;}.d2 ul li span {  position: absolute;  top: 21px;  left: 54px;  width: 18px;  height: 17px;  border-radius: 20px;}@keyframes swing {  0% {      transform: rotate(0);  }  25% {      transform: rotate(-13deg);  }  50% {      transform: rotate(0);  }  75% {      transform: rotate(13deg);  }  100% {      transform: rotate(0);  }}/* 灯笼 END */]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/universe.css"/>
      <url>/css/universe.css</url>
      
        <content type="html"><![CDATA[/* 背景宇宙星光  */#universe{  display: block;  position: fixed;  margin: 0;  padding: 0;  border: 0;  outline: 0;  left: 0;  top: 0;  width: 100%;  height: 100%;  pointer-events: none;  /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */  z-index: -1;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/day.js"/>
      <url>/js/day.js</url>
      
        <content type="html"><![CDATA[var d = new Date();m = d.getMonth() + 1;dd = d.getDate();y = d.getFullYear();// 公祭日if (m == 9 && dd == 18) {    document.getElementsByTagName("html")[0].setAttribute("style", "filter: grayscale(60%);");    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("今天是九一八事变" + (y - 1931).toString() + "周年纪念日\n🪔勿忘国耻，振兴中华🪔");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 7 && dd == 7) {    document.getElementsByTagName("html")[0].setAttribute("style", "filter: grayscale(60%);");    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("今天是卢沟桥事变" + (y - 1937).toString() + "周年纪念日\n🪔勿忘国耻，振兴中华🪔");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 12 && dd == 13) {    document.getElementsByTagName("html")[0].setAttribute("style", "filter: grayscale(60%);");    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("今天是南京大屠杀" + (y - 1937).toString() + "周年纪念日\n🪔勿忘国耻，振兴中华🪔");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 8 && dd == 14) {    document.getElementsByTagName("html")[0].setAttribute("style", "filter: grayscale(60%);");    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("今天是世界慰安妇纪念日\n🪔勿忘国耻，振兴中华🪔");        sessionStorage.setItem("isPopupWindow", "1");    }}// 节假日if (m == 10 && dd <= 3) {//国庆节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("祝祖国" + (y - 1949).toString() + "岁生日快乐！");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 8 && dd == 15) {//搞来玩的，小日子投降    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("小日子已经投降" + (y - 1945).toString() + "年了😃");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 1 && dd == 1) {//元旦节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire(y.toString() + "年元旦快乐！🎉");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 3 && dd == 8) {//妇女节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("各位女神们，妇女节快乐！👩");        sessionStorage.setItem("isPopupWindow", "1");    }}l = ["非常抱歉，因为不可控原因，博客将于明天停止运营！", "好消息，日本没了！", "美国垮了，原因竟然是川普！", "微软垮了！", "你的电脑已经过载，建议立即关机！", "你知道吗？站长很喜欢你哦！", "一分钟有61秒哦", "你喜欢的人跟别人跑了！"]if (m == 4 && dd == 1) {//愚人节，随机谎话    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire(l[Math.floor(Math.random() * l.length)]);        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 5 && dd == 1) {//劳动节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("劳动节快乐\n为各行各业辛勤工作的人们致敬！");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 5 && dd == 4) {//青年节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("青年节快乐\n青春不是回忆逝去,而是把握现在！");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 5 && dd == 20) {//520    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("今年是520情人节\n快和你喜欢的人一起过吧！💑");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 7 && dd == 1) {//建党节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("祝中国共产党" + (y - 1921).toString() + "岁生日快乐！");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 9 && dd == 10) {//教师节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("各位老师们教师节快乐！👩‍🏫");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 12 && dd == 25) {//圣诞节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("圣诞节快乐！🎄");        sessionStorage.setItem("isPopupWindow", "1");    }}//传统节日部分if ((y == 2023 && m == 4 && dd == 5) || (y == 2024 && m == 4 && dd == 4) || (y == 2025 && m == 4 && dd == 4)) {//清明节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("清明时节雨纷纷,一束鲜花祭故人💐");        sessionStorage.setItem("isPopupWindow", "1");    }}if ((y == 2023 && m == 12 && dd == 22) || (y == 2024 && m == 12 && dd == 21) || (y == 2025 && m == 12 && dd == 21)) {//冬至    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("冬至快乐\n快吃上一碗热热的汤圆和饺子吧🧆");        sessionStorage.setItem("isPopupWindow", "1");    }}var lunar = calendarFormatter.solar2lunar();//农历采用汉字计算，防止出现闰月导致问题if ((lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "初六") || (lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "初五") || (lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "初四") || (lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "初三") || (lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "初二") || (lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "初一") || (lunar["IMonthCn"] == "腊月" && lunar["IDayCn"] == "三十") || (lunar["IMonthCn"] == "腊月" && lunar["IDayCn"] == "廿九")) {    //春节，本来只有大年三十到初六，但是有时候除夕是大年二十九，所以也加上了    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire(y.toString() + "年新年快乐\n🎊祝你心想事成，诸事顺利🎊");        sessionStorage.setItem("isPopupWindow", "1");    }}if ((lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "十五")) {    //元宵节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("元宵节快乐\n送你一个大大的灯笼🧅");        sessionStorage.setItem("isPopupWindow", "1");    }}if ((lunar["IMonthCn"] == "五月" && lunar["IDayCn"] == "初五")) {    //端午节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("端午节快乐\n请你吃一条粽子🍙");        sessionStorage.setItem("isPopupWindow", "1");    }}if ((lunar["IMonthCn"] == "七月" && lunar["IDayCn"] == "初七")) {    //七夕节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("七夕节快乐\n黄昏后,柳梢头,牛郎织女来碰头");        sessionStorage.setItem("isPopupWindow", "1");    }}if ((lunar["IMonthCn"] == "八月" && lunar["IDayCn"] == "十五")) {    //中秋节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("中秋节快乐\n请你吃一块月饼🍪");        sessionStorage.setItem("isPopupWindow", "1");    }}if ((lunar["IMonthCn"] == "九月" && lunar["IDayCn"] == "初九")) {    //重阳节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("重阳节快乐\n独在异乡为异客，每逢佳节倍思亲");        sessionStorage.setItem("isPopupWindow", "1");    }}// 切换主题提醒// if (y == 2022 && m == 12 && (dd >= 18 && dd <= 20)) {//     if (sessionStorage.getItem("isPopupWindow") != "1") {//         Swal.fire("网站换成冬日限定主题啦⛄");//         sessionStorage.setItem("isPopupWindow", "1");//     }// }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/emoji.js"/>
      <url>/js/emoji.js</url>
      
        <content type="html"><![CDATA[// 如果当前页有评论就执行函数if (document.getElementById('post-comment')) owoBig();// 表情放大function owoBig() {    let flag = 1, // 设置节流阀        owo_time = '', // 设置计时器        m = 3; // 设置放大倍数    // 创建盒子    let div = document.createElement('div'),        body = document.querySelector('body');    // 设置ID    div.id = 'owo-big';    // 插入盒子    body.appendChild(div)    // 构造observer    let observer = new MutationObserver(mutations => {        for (let i = 0; i < mutations.length; i++) {            let dom = mutations[i].addedNodes,                owo_body = '';            if (dom.length == 2 && dom[1].className == 'OwO-body') owo_body = dom[1];            // 如果需要在评论内容中启用此功能请解除下面的注释            // else if (dom.length == 1 && dom[0].className == 'tk-comment') owo_body = dom[0];            else continue;                        // 禁用右键（手机端长按会出现右键菜单，为了体验给禁用掉）            if (document.body.clientWidth <= 768) owo_body.addEventListener('contextmenu', e => e.preventDefault());            // 鼠标移入            owo_body.onmouseover = (e) => {                    if (flag && e.target.tagName == 'IMG') {                        flag = 0;                        // 移入300毫秒后显示盒子                        owo_time = setTimeout(() => {                            let height = e.path[0].clientHeight * m, // 盒子高                                width = e.path[0].clientWidth * m, // 盒子宽                                left = (e.x - e.offsetX) - (width - e.path[0].clientWidth) / 2, // 盒子与屏幕左边距离                                top = e.y - e.offsetY; // 盒子与屏幕顶部距离                            if ((left + width) > body.clientWidth) left -= ((left + width) - body.clientWidth + 10); // 右边缘检测，防止超出屏幕                            if (left < 0) left = 10; // 左边缘检测，防止超出屏幕                            // 设置盒子样式                            div.style.cssText = `display:flex; height:${height}px; width:${width}px; left:${left}px; top:${top}px;`;                            // 在盒子中插入图片                            div.innerHTML = `<img src="${e.target.src}">`                        }, 300);                    }                };            // 鼠标移出隐藏盒子            owo_body.onmouseout = () => { div.style.display = 'none', flag = 1, clearTimeout(owo_time); }        }    })    observer.observe(document.getElementById('post-comment'), { subtree: true, childList: true }) // 监听的 元素 和 配置项}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/kslink.js"/>
      <url>/js/kslink.js</url>
      
        <content type="html"><![CDATA[var leonus = {  linkCom: e => {      var t = document.querySelector(".el-textarea__inner");      "bf" == e ? (t.value = "```yml\n", t.value += "- name: \n  link: \n  avatar: \n  descr: \n  siteshot: ", t.value += "\n```", t.setSelectionRange(15, 15)) : (t.value = "站点名称：\n站点地址：\n头像链接：\n站点描述：\n站点截图：", t.setSelectionRange(5, 5)), t.focus()  },  owoBig: () => {      if (!document.getElementById("post-comment") || document.body.clientWidth < 768) return;      let e = 1,          t = "",          o = document.createElement("div"),          n = document.querySelector("body");      o.id = "owo-big", n.appendChild(o), new MutationObserver((l => {          for (let a = 0; a < l.length; a++) {              let i = l[a].addedNodes,                  s = "";              if (2 == i.length && "OwO-body" == i[1].className) s = i[1];              else {                  if (1 != i.length || "tk-comment" != i[0].className) continue;                  s = i[0]              }              s.onmouseover = l => {                  e && ("OwO-body" == s.className && "IMG" == l.target.tagName || "tk-owo-emotion" == l.target.className) && (e = 0, t = setTimeout((() => {                      let e = 3 * l.path[0].clientHeight,                          t = 3 * l.path[0].clientWidth,                          a = l.x - l.offsetX - (t - l.path[0].clientWidth) / 2,                          i = l.y - l.offsetY;                      a + t > n.clientWidth && (a -= a + t - n.clientWidth + 10), a < 0 && (a = 10), o.style.cssText = `display:flex; height:${e}px; width:${t}px; left:${a}px; top:${i}px;`, o.innerHTML = `<img src="${l.target.src}">`                  }), 300))              }, s.onmouseout = () => {                  o.style.display = "none", e = 1, clearTimeout(t)              }          }      })).observe(document.getElementById("post-comment"), {          subtree: !0,          childList: !0      })  },};]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/fps.js"/>
      <url>/js/fps.js</url>
      
        <content type="html"><![CDATA[if (window.localStorage.getItem("fpson") == undefined || window.localStorage.getItem("fpson") == "1") {  var rAF = function () {      return (          window.requestAnimationFrame ||          window.webkitRequestAnimationFrame ||          function (callback) {              window.setTimeout(callback, 1000 / 60);          }      );  }();  var frame = 0;  var allFrameCount = 0;  var lastTime = Date.now();  var lastFameTime = Date.now();  var loop = function () {      var now = Date.now();      var fs = (now - lastFameTime);      var fps = Math.round(1000 / fs);      lastFameTime = now;      // 不置 0，在动画的开头及结尾记录此值的差值算出 FPS      allFrameCount++;      frame++;      if (now > 1000 + lastTime) {          var fps = Math.round((frame * 1000) / (now - lastTime));          if (fps <= 5) {              var kd = `<span style="color:#bd0000">卡成ppt🤢</span>`          } else if (fps <= 15) {              var kd = `<span style="color:red">电竞级帧率😖</span>`          } else if (fps <= 25) {              var kd = `<span style="color:orange">有点难受😨</span>`          } else if (fps < 35) {              var kd = `<span style="color:#9338e6">不太流畅🙄</span>`          } else if (fps <= 45) {              var kd = `<span style="color:#08b7e4">还不错哦😁</span>`          } else {              var kd = `<span style="color:#39c5bb">十分流畅🤣</span>`          }          document.getElementById("fps").innerHTML = `FPS:${fps} ${kd}`;          frame = 0;          lastTime = now;      };      rAF(loop);  }  loop();} else {  document.getElementById("fps").style = "display:none!important"}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/lunar.js"/>
      <url>/js/lunar.js</url>
      
        <content type="html"><![CDATA[var lunarInfo=[19416,19168,42352,21717,53856,55632,91476,22176,39632,21970,19168,42422,42192,53840,119381,46400,54944,44450,38320,84343,18800,42160,46261,27216,27968,109396,11104,38256,21234,18800,25958,54432,59984,28309,23248,11104,100067,37600,116951,51536,54432,120998,46416,22176,107956,9680,37584,53938,43344,46423,27808,46416,86869,19872,42416,83315,21168,43432,59728,27296,44710,43856,19296,43748,42352,21088,62051,55632,23383,22176,38608,19925,19152,42192,54484,53840,54616,46400,46752,103846,38320,18864,43380,42160,45690,27216,27968,44870,43872,38256,19189,18800,25776,29859,59984,27480,23232,43872,38613,37600,51552,55636,54432,55888,30034,22176,43959,9680,37584,51893,43344,46240,47780,44368,21977,19360,42416,86390,21168,43312,31060,27296,44368,23378,19296,42726,42208,53856,60005,54576,23200,30371,38608,19195,19152,42192,118966,53840,54560,56645,46496,22224,21938,18864,42359,42160,43600,111189,27936,44448,84835,37744,18936,18800,25776,92326,59984,27424,108228,43744,41696,53987,51552,54615,54432,55888,23893,22176,42704,21972,21200,43448,43344,46240,46758,44368,21920,43940,42416,21168,45683,26928,29495,27296,44368,84821,19296,42352,21732,53600,59752,54560,55968,92838,22224,19168,43476,41680,53584,62034,54560],solarMonth=[31,28,31,30,31,30,31,31,30,31,30,31],Gan=["甲","乙","丙","丁","戊","己","庚","辛","壬","癸"],Zhi=["子","丑","寅","卯","辰","巳","午","未","申","酉","戌","亥"],Animals=["鼠","牛","虎","兔","龙","蛇","马","羊","猴","鸡","狗","猪"],solarTerm=["小寒","大寒","立春","雨水","惊蛰","春分","清明","谷雨","立夏","小满","芒种","夏至","小暑","大暑","立秋","处暑","白露","秋分","寒露","霜降","立冬","小雪","大雪","冬至"],sTermInfo=["9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c3598082c95f8c965cc920f","97bd0b06bdb0722c965ce1cfcc920f","b027097bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd0b06bdb0722c965ce1cfcc920f","b027097bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd0b06bdb0722c965ce1cfcc920f","b027097bd097c36b0b6fc9274c91aa","9778397bd19801ec9210c965cc920e","97b6b97bd19801ec95f8c965cc920f","97bd09801d98082c95f8e1cfcc920f","97bd097bd097c36b0b6fc9210c8dc2","9778397bd197c36c9210c9274c91aa","97b6b97bd19801ec95f8c965cc920e","97bd09801d98082c95f8e1cfcc920f","97bd097bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c91aa","97b6b97bd19801ec95f8c965cc920e","97bcf97c3598082c95f8e1cfcc920f","97bd097bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c3598082c95f8c965cc920f","97bd097bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c3598082c95f8c965cc920f","97bd097bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd097bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd097bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf97c359801ec95f8c965cc920f","97bd097bd07f595b0b6fc920fb0722","9778397bd097c36b0b6fc9210c8dc2","9778397bd19801ec9210c9274c920e","97b6b97bd19801ec95f8c965cc920f","97bd07f5307f595b0b0bc920fb0722","7f0e397bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c920e","97b6b97bd19801ec95f8c965cc920f","97bd07f5307f595b0b0bc920fb0722","7f0e397bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c91aa","97b6b97bd19801ec9210c965cc920e","97bd07f1487f595b0b0bc920fb0722","7f0e397bd097c36b0b6fc9210c8dc2","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf7f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf7f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf7f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c965cc920e","97bcf7f1487f531b0b0bb0b6fb0722","7f0e397bd07f595b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b97bd19801ec9210c9274c920e","97bcf7f0e47f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9210c91aa","97b6b97bd197c36c9210c9274c920e","97bcf7f0e47f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9210c8dc2","9778397bd097c36c9210c9274c920e","97b6b7f0e47f531b0723b0b6fb0722","7f0e37f5307f595b0b0bc920fb0722","7f0e397bd097c36b0b6fc9210c8dc2","9778397bd097c36b0b70c9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e37f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc9210c8dc2","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e27f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9274c91aa","97b6b7f0e47f531b0723b0787b0721","7f0e27f0e47f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9210c91aa","97b6b7f0e47f149b0723b0787b0721","7f0e27f0e47f531b0723b0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","9778397bd097c36b0b6fc9210c8dc2","977837f0e37f149b0723b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e37f5307f595b0b0bc920fb0722","7f0e397bd097c35b0b6fc9210c8dc2","977837f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0721","7f0e37f1487f595b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc9210c8dc2","977837f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","977837f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd097c35b0b6fc920fb0722","977837f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","977837f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","977837f0e37f14998082b0787b06bd","7f07e7f0e47f149b0723b0787b0721","7f0e27f0e47f531b0b0bb0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","977837f0e37f14998082b0723b06bd","7f07e7f0e37f149b0723b0787b0721","7f0e27f0e47f531b0723b0b6fb0722","7f0e397bd07f595b0b0bc920fb0722","977837f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e37f1487f595b0b0bb0b6fb0722","7f0e37f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e37f1487f531b0b0bb0b6fb0722","7f0e37f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e37f1487f531b0b0bb0b6fb0722","7f0e37f0e37f14898082b072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e37f0e37f14898082b072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e37f0e366aa89801eb072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f149b0723b0787b0721","7f0e27f1487f531b0b0bb0b6fb0722","7f0e37f0e366aa89801eb072297c35","7ec967f0e37f14998082b0723b06bd","7f07e7f0e47f149b0723b0787b0721","7f0e27f0e47f531b0723b0b6fb0722","7f0e37f0e366aa89801eb072297c35","7ec967f0e37f14998082b0723b06bd","7f07e7f0e37f14998083b0787b0721","7f0e27f0e47f531b0723b0b6fb0722","7f0e37f0e366aa89801eb072297c35","7ec967f0e37f14898082b0723b02d5","7f07e7f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e36665b66aa89801e9808297c35","665f67f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b0721","7f07e7f0e47f531b0723b0b6fb0722","7f0e36665b66a449801e9808297c35","665f67f0e37f14898082b0723b02d5","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e36665b66a449801e9808297c35","665f67f0e37f14898082b072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e26665b66a449801e9808297c35","665f67f0e37f1489801eb072297c35","7ec967f0e37f14998082b0787b06bd","7f07e7f0e47f531b0723b0b6fb0721","7f0e27f1487f531b0b0bb0b6fb0722"],nStr1=["日","一","二","三","四","五","六","七","八","九","十"],nStr2=["初","十","廿","卅"],nStr3=["正","二","三","四","五","六","七","八","九","十","冬","腊"];function lYearDays(b){var f,c=348;for(f=32768;f>8;f>>=1)c+=lunarInfo[b-1900]&f?1:0;return c+leapDays(b)}function leapMonth(b){return 15&lunarInfo[b-1900]}function leapDays(b){return leapMonth(b)?65536&lunarInfo[b-1900]?30:29:0}function monthDays(b,f){return f>12||f<1?-1:lunarInfo[b-1900]&65536>>f?30:29}function solarDays(b,f){if(f>12||f<1)return-1;var c=f-1;return 1===c?b%4==0&&b%100!=0||b%400==0?29:28:solarMonth[c]}function toGanZhiYear(b){var f=(b-3)%10,c=(b-3)%12;return 0===f&&(f=10),0===c&&(c=12),Gan[f-1]+Zhi[c-1]}function toAstro(b,f){return"魔羯水瓶双鱼白羊金牛双子巨蟹狮子处女天秤天蝎射手魔羯".substr(2*b-(f<[20,19,21,21,21,22,23,23,23,23,22,22][b-1]?2:0),2)+"座"}function toGanZhi(b){return Gan[b%10]+Zhi[b%12]}function getTerm(b,f){if(b<1900||b>2100)return-1;if(f<1||f>24)return-1;var c=sTermInfo[b-1900],e=[parseInt("0x"+c.substr(0,5)).toString(),parseInt("0x"+c.substr(5,5)).toString(),parseInt("0x"+c.substr(10,5)).toString(),parseInt("0x"+c.substr(15,5)).toString(),parseInt("0x"+c.substr(20,5)).toString(),parseInt("0x"+c.substr(25,5)).toString()],a=[e[0].substr(0,1),e[0].substr(1,2),e[0].substr(3,1),e[0].substr(4,2),e[1].substr(0,1),e[1].substr(1,2),e[1].substr(3,1),e[1].substr(4,2),e[2].substr(0,1),e[2].substr(1,2),e[2].substr(3,1),e[2].substr(4,2),e[3].substr(0,1),e[3].substr(1,2),e[3].substr(3,1),e[3].substr(4,2),e[4].substr(0,1),e[4].substr(1,2),e[4].substr(3,1),e[4].substr(4,2),e[5].substr(0,1),e[5].substr(1,2),e[5].substr(3,1),e[5].substr(4,2)];return parseInt(a[f-1])}function toChinaMonth(b){if(b>12||b<1)return-1;var f=nStr3[b-1];return f+="月"}function toChinaDay(b){var f;switch(b){case 10:f="初十";break;case 20:f="二十";break;case 30:f="三十";break;default:f=nStr2[Math.floor(b/10)],f+=nStr1[b%10]}return f}function getAnimal(b){return Animals[(b-4)%12]}function solar2lunar(b,f,c){if(b<1900||b>2100)return-1;if(1900===b&&1===f&&c<31)return-1;var e,a,r=null,t=0;b=(r=b?new Date(b,parseInt(f)-1,c):new Date).getFullYear(),f=r.getMonth()+1,c=r.getDate();var d=(Date.UTC(r.getFullYear(),r.getMonth(),r.getDate())-Date.UTC(1900,0,31))/864e5;for(e=1900;e<2101&&d>0;e++)d-=t=lYearDays(e);d<0&&(d+=t,e--);var n=new Date,s=!1;n.getFullYear()===b&&n.getMonth()+1===f&&n.getDate()===c&&(s=!0);var u=r.getDay(),o=nStr1[u];0===u&&(u=7);var l=e;a=leapMonth(e);var i=!1;for(e=1;e<13&&d>0;e++)a>0&&e===a+1&&!1===i?(--e,i=!0,t=leapDays(l)):t=monthDays(l,e),!0===i&&e===a+1&&(i=!1),d-=t;0===d&&a>0&&e===a+1&&(i?i=!1:(i=!0,--e)),d<0&&(d+=t,--e);var h=e,D=d+1,g=f-1,v=toGanZhiYear(l),y=getTerm(b,2*f-1),m=getTerm(b,2*f),p=toGanZhi(12*(b-1900)+f+11);c>=y&&(p=toGanZhi(12*(b-1900)+f+12));var M=!1,T=null;y===c&&(M=!0,T=solarTerm[2*f-2]),m===c&&(M=!0,T=solarTerm[2*f-1]);var I=toGanZhi(Date.UTC(b,g,1,0,0,0,0)/864e5+25567+10+c-1),C=toAstro(f,c);return{lYear:l,lMonth:h,lDay:D,Animal:getAnimal(l),IMonthCn:(i?"闰":"")+toChinaMonth(h),IDayCn:toChinaDay(D),cYear:b,cMonth:f,cDay:c,gzYear:v,gzMonth:p,gzDay:I,isToday:s,isLeap:i,nWeek:u,ncWeek:"星期"+o,isTerm:M,Term:T,astro:C}}var calendarFormatter={solar2lunar:function(b,f,c){return solar2lunar(b,f,c)},lunar2solar:function(b,f,c,e){if((e=!!e)&&leapMonth!==f)return-1;if(2100===b&&12===f&&c>1||1900===b&&1===f&&c<31)return-1;var a=monthDays(b,f),r=a;if(e&&(r=leapDays(b,f)),b<1900||b>2100||c>r)return-1;for(var t=0,d=1900;d<b;d++)t+=lYearDays(d);var n=0,s=!1;for(d=1;d<f;d++)n=leapMonth(b),s||n<=d&&n>0&&(t+=leapDays(b),s=!0),t+=monthDays(b,d);e&&(t+=a);var u=Date.UTC(1900,1,30,0,0,0),o=new Date(864e5*(t+c-31)+u);return solar2lunar(o.getUTCFullYear(),o.getUTCMonth()+1,o.getUTCDate())}};]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/light.js"/>
      <url>/js/light.js</url>
      
        <content type="html"><![CDATA[// 霓虹灯效果// 颜色数组var arr = ["#39c5bb", "#f14747", "#f1a247", "#f1ee47", "#b347f1", "#1edbff", "#ed709b", "#5636ed"];// 颜色索引var idx = 0;// 切换颜色function changeColor() {    // 仅夜间模式才启用    if (document.getElementsByTagName('html')[0].getAttribute('data-theme') == 'dark') {        if (document.getElementById("site-name"))            document.getElementById("site-name").style.textShadow = arr[idx] + " 0 0 15px";        if (document.getElementById("site-title"))            document.getElementById("site-title").style.textShadow = arr[idx] + " 0 0 15px";        if (document.getElementById("site-subtitle"))            document.getElementById("site-subtitle").style.textShadow = arr[idx] + " 0 0 10px";        if (document.getElementById("post-info"))            document.getElementById("post-info").style.textShadow = arr[idx] + " 0 0 5px";        try {            document.getElementsByClassName("author-info__name")[0].style.textShadow = arr[idx] + " 0 0 12px";            document.getElementsByClassName("author-info__description")[0].style.textShadow = arr[idx] + " 0 0 12px";        } catch {                    }        idx++;        if (idx == 8) {            idx = 0;        }    } else {        // 白天模式恢复默认        if (document.getElementById("site-name"))            document.getElementById("site-name").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("site-title"))            document.getElementById("site-title").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("site-subtitle"))            document.getElementById("site-subtitle").style.textShadow = "#1e1e1ee0 1px 1px 1px";        if (document.getElementById("post-info"))            document.getElementById("post-info").style.textShadow = "#1e1e1ee0 1px 1px 1px";        try {            document.getElementsByClassName("author-info__name")[0].style.textShadow = "";            document.getElementsByClassName("author-info__description")[0].style.textShadow = "";        } catch {                    }    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/meihua.js"/>
      <url>/js/meihua.js</url>
      
        <content type="html"><![CDATA[// 更新版本需要每个用户都恢复一次默认设置if (localStorage.getItem("reset_2") == undefined) {  localStorage.setItem("reset_2", "1");  localStorage.removeItem("reset_1");  clearItem();  setTimeout(function () {    new Vue({      data: function () {        this.$notify({          title: "提示🍒",          message: " (｡･∀･)ﾉﾞ由于网站部分设置项更新，当前已为您重置所有设置，祝您愉快！",          position: 'top-left',          offset: 50,          showClose: true,          type: "success",          duration: 8000        });      }    })  }, 1500);}// 清除localStorage配置项function clearItem() {  localStorage.removeItem('blogbg');  localStorage.removeItem('universe');  localStorage.removeItem('blur');  localStorage.removeItem('fpson');  localStorage.removeItem('transNum');  localStorage.removeItem('bing');  localStorage.removeItem('blurRad');  localStorage.removeItem('font');  localStorage.removeItem('themeColor');  localStorage.removeItem('rs');  localStorage.removeItem('mouse');}// 设置字体if (localStorage.getItem("font") == undefined) {  localStorage.setItem("font", "xxx");}setFont(localStorage.getItem("font"));function setFont(n) {  localStorage.setItem("font", n)  if (n == "default") {    document.documentElement.style.setProperty('--global-font', '-apple-system');    document.body.style.fontFamily = "-apple-system, Consolas_1, BlinkMacSystemFont, 'Segoe UI' , 'Helvetica Neue' , Lato, Roboto, 'PingFang SC' , 'Microsoft JhengHei' , 'Microsoft YaHei' , sans-serif";  }  else {    document.documentElement.style.setProperty('--global-font', n);    document.body.style.fontFamily = "var(--global-font),-apple-system, IBM Plex Mono ,monosapce,'微软雅黑', sans-serif";  }  try { setFontBorder(); } catch (err) { };}// 设置字体选择框边界function setFontBorder() {  var curFont = localStorage.getItem("font");  var swfId = "swf_" + curFont;  document.getElementById(swfId).style.border = "2px solid var(--theme-color)";  Array.prototype.forEach.call(document.getElementsByClassName("swf"), function (ee) {    if (ee.id != swfId) ee.style.border = "2px solid var(--border-color)";  });}// 设置主题色if (localStorage.getItem("themeColor") == undefined) {  localStorage.setItem("themeColor", "green");}setColor(localStorage.getItem("themeColor"));function setColor(c) {  document.getElementById("themeColor").innerText = `:root{--theme-color:` + map.get(c) + ` !important}`;  localStorage.setItem("themeColor", c);  // 刷新鼠标颜色  CURSOR.refresh();  // 设置一个带有透明度的主题色，用于菜单栏的悬浮颜色  var theme_color = map.get(c);  var trans_theme_color = "rgba" + theme_color.substring(3, theme_color.length - 1) + ", 0.7)";  document.documentElement.style.setProperty("--text-bg-hover", trans_theme_color);}// 控制星空背景特效开关if (localStorage.getItem("universe") == undefined) {  localStorage.setItem("universe", "block");}setUniverse2(localStorage.getItem("universe"));function setUniverse2(c) {  document.getElementById("universe").style.display = c;  localStorage.setItem("universe", c);}function setUniverse() {  if (document.getElementById("universeSet").checked) {    setUniverse2("block");  } else {    setUniverse2("none");  }}// 帧率监测开关if (localStorage.getItem("fpson") == undefined) {  localStorage.setItem("fpson", "1");}function fpssw() {  if (document.getElementById("fpson").checked) {    localStorage.setItem("fpson", "1");  } else {    localStorage.setItem("fpson", "0");  }  setTimeout(reload, 600);}// 刷新窗口function reload() {  window.location.reload();}// 侧边栏开关if (localStorage.getItem("rs") == undefined) {  localStorage.setItem("rs", "block");}if (localStorage.getItem("rs") == "block") {  document.getElementById("rightSide").innerText = `:root{--rightside-display: block}`;} else {  document.getElementById("rightSide").innerText = `:root{--rightside-display: none}`;}function toggleRightside() {  // 先设置localStorage变量  if (document.getElementById("rightSideSet").checked) {    localStorage.setItem("rs", "block");    document.getElementById("rightSide").innerText = `:root{--rightside-display: block}`;  } else {    localStorage.setItem("rs", "none");    document.getElementById("rightSide").innerText = `:root{--rightside-display: none}`;  }}// 透明度调节滑块if (localStorage.getItem("transNum") == undefined) {  localStorage.setItem("transNum", 95);}var curTransNum = localStorage.getItem("transNum");var curTransMini = curTransNum * 0.95;document.getElementById("transPercent").innerText = `:root{--trans-light: rgba(253, 253, 253, ${curTransNum}%) !important; --trans-dark: rgba(25, 25, 25, ${curTransNum}%) !important} `;function setTrans() {  var elem = document.getElementById("transSet");  var newTransNum = elem.value;  var target = document.querySelector('.transValue');  target.innerHTML = "透明度 (0%-100%): " + newTransNum + "%";  localStorage.setItem("transNum", newTransNum);  curTransMini = newTransNum * 0.95;  curTransNum = newTransNum;  // 更新当前透明度  document.querySelector('#rang_trans').style.width = curTransMini + "%";  document.getElementById("transPercent").innerText = `:root{--trans-light: rgba(253, 253, 253, ${newTransNum}%) !important; --trans-dark: rgba(25, 25, 25, ${newTransNum}%) !important} `;};// 模糊度调节滑块if (localStorage.getItem("blurRad") == undefined) {  localStorage.setItem("blurRad", 20);}var curBlur = localStorage.getItem("blurRad"); // 当前模糊半径var miniBlur = curBlur * 0.95;document.getElementById("blurNum").innerText = `:root{--blur-num: blur(${curBlur}px) saturate(120%) !important`;function setBlurNum() {  var elem = document.getElementById("blurSet");  var newBlur = elem.value;  var target = document.querySelector('.blurValue');  target.innerHTML = "模糊半径 (开启模糊生效 0px-100px): " + newBlur + "px";  localStorage.setItem("blurRad", newBlur);  curBlur = newBlur;  miniBlur = curBlur * 0.95;  // var max = elem.getAttribute("max");  document.querySelector('#rang_blur').style.width = miniBlur + "%";  document.getElementById("blurNum").innerText = `:root{--blur-num: blur(${curBlur}px) saturate(120%) !important`;};// 模糊效果开关if (localStorage.getItem("blur") == undefined) {  localStorage.setItem("blur", 0);}if (localStorage.getItem("blur") == 0) {  document.getElementById("settingStyle").innerText = `:root{--backdrop-filter: none}`;} else {  document.getElementById("settingStyle").innerText = `:root{--backdrop-filter: var(--blur-num)}`;}function setBlur() {  if (document.getElementById("blur").checked) {    localStorage.setItem("blur", 1);    document.getElementById("settingStyle").innerText = `:root{--backdrop-filter: var(--blur-num)}`;  } else {    localStorage.setItem("blur", 0);    document.getElementById("settingStyle").innerText = `:root{--backdrop-filter: none}`;  }}// 切换自定义颜色var defineColor = localStorage.getItem("blogbg") && localStorage.getItem("blogbg").charAt(0) == '#' ? localStorage.getItem("blogbg") : '#F4D88A';function changeBgColor() {  changeBg(document.querySelector("#colors").value);}// 更换背景(自己的代码)if (localStorage.getItem("blogbg") != undefined) {  let curBg = localStorage.getItem("blogbg");  document.getElementById("defineBg").innerText = `:root{    --default-bg: ${curBg};    --darkmode-bg: ${curBg};    --mobileday-bg: ${curBg};    --mobilenight-bg: ${curBg};  }`;  changeBg(curBg);} else {    // 替换你自己的默认背景  document.getElementById("defineBg").innerText = `:root{    --default-bg: url(xxx);    --darkmode-bg:url(xxx);    --mobileday-bg: url(xxx);    --mobilenight-bg: url(xxx);  }`;}function changeBg(s) {  let bg = document.getElementById("web_bg");  if (s.charAt(0) == "#") {    bg.style.backgroundColor = s;    bg.style.backgroundImage = "none";    defineColor = s;  } else {    bg.style.backgroundImage = s    defineColor = '#F4D88A';  };  localStorage.setItem("blogbg", s);  localStorage.setItem("bing", "false");  if (document.getElementById("bingSet")) document.getElementById("bingSet").checked = false;}// 切换链接对应的背景(加入了链接检验与防抖)function getPicture() {  debounce(getPicture_, 300);}function getPicture_() {  let bg = document.getElementById("web_bg");  checkImgExists(document.getElementById("pic-link").value).then(() => {    // 有效的图片链接    var link = "url(" + document.getElementById("pic-link").value + ")";    bg.style.backgroundImage = link;    localStorage.setItem("blogbg", link);    localStorage.setItem("bing", "false");    if (document.getElementById("bingSet")) document.getElementById("bingSet").checked = false;    // 提示切换成功    new Vue({      data: function () {        this.$notify({          title: "可以啦🍨",          message: "切换自定义背景成功！",          position: 'top-left',          offset: 50,          showClose: true,          type: "success",          duration: 5000        });      }    })  }).catch(() => {    // 无效的图片链接，提示无效    new Vue({      data: function () {        this.$notify({          title: "链接不对🤣",          message: "请输入有效的图片链接！",          position: 'top-left',          offset: 50,          showClose: true,          type: "warning",          duration: 5000        });      }    })  })}// 判断图片链接是否可用function checkImgExists(imgurl) {  return new Promise(function (resolve, reject) {    var ImgObj = new Image();    ImgObj.src = imgurl;    ImgObj.onload = function (res) {      resolve(res);    }    ImgObj.onerror = function (err) {      reject(err);    }  })}// 必应每日图片if (localStorage.getItem("bing") == undefined) {  localStorage.setItem("bing", "false");}if (localStorage.getItem("bing") == "true") {  let bg = document.getElementById("web_bg");  // 手机电脑分开  let curUrl = screen.width <= 768 ? "url(https://bing.img.run/m.php)" : "url(https://bing.img.run/1920x1080.php)";  bg.style.backgroundImage = curUrl;}function setBing() {  // 打开就设置  if (document.getElementById("bingSet").checked) {    let bg = document.getElementById("web_bg");    // 手机电脑分开    let curUrl = screen.width <= 768 ? "url(https://bing.img.run/m.php)" : "url(https://bing.img.run/1920x1080.php)";    bg.style.backgroundImage = curUrl;    localStorage.setItem("bing", "true");    localStorage.removeItem("blogbg");  } else {    // 关闭就移除并恢复默认壁纸    localStorage.setItem("bing", "false");    setTimeout(reload, 600);  }}// 霓虹灯开关var clk;  // 定时器对象if (localStorage.getItem("light") == undefined) {  localStorage.setItem("light", true);}if (localStorage.getItem("light") == "true") {  clearInterval(clk);  clk = setInterval(changeLightColor, 1200);}function setLight() {  if (document.getElementById("lightSet").checked) {    clearInterval(clk);    clk = setInterval(changeLightColor, 1200);    localStorage.setItem("light", "true");  } else {    clearInterval(clk);    localStorage.setItem("light", "false");    // 恢复默认    if (document.getElementById("site-name"))      document.getElementById("site-name").style.textShadow = "#1e1e1ee0 1px 1px 1px";    if (document.getElementById("site-title"))      document.getElementById("site-title").style.textShadow = "#1e1e1ee0 1px 1px 1px";    if (document.getElementById("site-subtitle"))      document.getElementById("site-subtitle").style.textShadow = "#1e1e1ee0 1px 1px 1px";    if (document.getElementById("post-info"))      document.getElementById("post-info").style.textShadow = "#1e1e1ee0 1px 1px 1px";    try {      document.getElementsByClassName("author-info__name")[0].style.textShadow = "";      document.getElementsByClassName("author-info__description")[0].style.textShadow = "";    } catch {    }  }}// 创建窗口var winbox = "";function createWinbox() {  let div = document.createElement("div");  document.body.appendChild(div);  winbox = WinBox({    id: "meihuaBox",    index: 99,    title: "美化设置",    x: "left",    y: "center",    minwidth: "300px",    height: "60%",    background: 'var(--theme-color)',    onmaximize: () => {      div.innerHTML = `<style>body::-webkit-scrollbar {display: none;} div#meihuaBox {width: 100% !important;}</style>`;    },    onrestore: () => {      div.innerHTML = "";    },  });  winResize();  window.addEventListener("resize", winResize);  // 每一类我放了一个演示，直接往下复制粘贴 a标签 就可以，需要注意的是 函数里面的链接 冒号前面需要添加反斜杠\进行转义  winbox.body.innerHTML = `<div class="settings" style="display: block;"><div id="article-container" style="padding:12px;"><br><center><p><button onclick="reset()" style="background:linear-gradient(to right, #fc354c, #0abfbc);display:block;width:40%;padding:15px 0;border-radius:30px;color:white;font-size:1.1em;"><i class="fa-solid fa-arrows-rotate"></i>&nbsp;恢复默认设置</button></p></center><h2>一、显示偏好</h2><div class="transValue" style="font-weight:bold;padding-left:10px">透明度 (0%-100%): ${curTransNum}%</div><div class="range">  <input id="transSet" type="range" min="0" max="100" step="1" value=${curTransNum} oninput="setTrans()">  <p class="rang_width" id="rang_trans" style="width:${curTransMini}%"></p></div><div class="blurValue" style="font-weight:bold;padding-left:10px">模糊半径 (开启模糊生效 0px-100px): ${curBlur} px</div><div class="range">  <input id="blurSet" type="range" min="0" max="100" step="1" value="${curBlur}" oninput="setBlurNum()">  <p class="rang_width" id="rang_blur" style="width:${miniBlur}%"></p></div><div class="content" style="display:flex">  <div class="content-text" style="font-weight:bold; padding-left:10px"> 星空特效 (夜间模式) </div><input type="checkbox" id="universeSet" onclick="setUniverse()">  <div class="content-text" style="font-weight:bold; padding-left:20px"> 霓虹灯 (夜间模式) </div><input type="checkbox" id="lightSet" onclick="setLight()"></div><div class="content" style="display:flex">  <div class="content-text" style="font-weight:bold; padding-left:10px"> 模糊效果 (消耗性能) </div><input type="checkbox" id="blur" onclick="setBlur()">  <div class="content-text" style="font-weight:bold; padding-left:20px"> 侧边栏 (默认开) </div><input type="checkbox" id="rightSideSet" onclick="toggleRightside()"></div><div class="content" style="display:flex">  <div class="content-text" style="font-weight:bold; padding-left:10px"> 帧率监测 (刷新生效) </div><input type="checkbox" id="fpson" onclick="fpssw()">  <div class="content-text" style="font-weight:bold; padding-left:20px"> 必应每日壁纸 </div><input type="checkbox" id="bingSet" onclick="setBing()"></div><h2>二、字体设置</h2><div class="note warning modern"><p>非商免字体未经授权只能个人使用。本站为完全非商业、非盈利性质的网站，平时用于个人学习交流，如有侵权请联系站长删除，谢谢！ —— 致版权方</p></div><p id="swfs"><a class="swf" id="swf_ZhuZiAWan" href="javascript:;" rel="noopener external nofollow" style="font-family:'ZhuZiAWan'!important;color:black" onclick="setFont('ZhuZiAWan')">筑紫A丸标准体2.0</a><a class="swf" id="swf_default" href="javascript:;" rel="noopener external nofollow" style="font-family:-apple-system, IBM Plex Mono ,monosapce,'微软雅黑', sans-serif;!important;color:black" onclick="setFont('default')">系统默认</a></p><h2>三、主题色设置</h2><div class="content" style="display:flex"><input type="radio" id="red" name="colors" value=" "        onclick="setColor('red')"><input type="radio" id="orange" name="colors" value=" "        onclick="setColor('orange')"><input type="radio" id="yellow" name="colors" value=" "        onclick="setColor('yellow')"><input type="radio" id="green" name="colors" value=" "        onclick="setColor('green')"><input type="radio" id="blue" name="colors" value=" "        onclick="setColor('blue')"><input type="radio" id="heoblue" name="colors" value=" "        onclick="setColor('heoblue')"><input type="radio" id="darkblue" name="colors" value=" "        onclick="setColor('darkblue')"><input type="radio" id="purple" name="colors" value=" "        onclick="setColor('purple')"><input type="radio" id="pink" name="colors" value=" "        onclick="setColor('pink')" checked="checked"><input type="radio" id="black" name="colors" value=" "        onclick="setColor('black')"><input type="radio" id="blackgray" name="colors" value=" "        onclick="setColor('blackgray')"></div><h2>四、背景设置</h2><center><button onclick="resetBg()" style="background:var(--theme-color);display:block;width:35%;padding:15px 0;border-radius:30px;color:white;"><i class="fa-solid fa-arrows-rotate"></i>&nbsp;恢复默认背景</button></center><h3>1. 二次元</h3><details class="folding-tag" cyan><summary> 查看二次元背景 </summary>              <div class='content'>              <div class="bgbox"><a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://sourcebucket.s3.ladydaily.com/img/home_bg.webp)" class="imgbox" onclick="changeBg('url(https\://sourcebucket.s3.ladydaily.com/img/home_bg.webp)')"></a></div>              </div>            </details><h3>2. 风景</h3><details class="folding-tag" cyan><summary> 查看风景背景 </summary>              <div class='content'>              <div class="bgbox"><a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://sourcebucket.s3.ladydaily.com/img/fj1.webp)" class="imgbox" onclick="changeBg('url(https://sourcebucket.s3.ladydaily.com/img/fj1.webp)')"></a></div>              </div>            </details><h3>3. 萌宠</h3><details class="folding-tag" cyan><summary> 查看萌宠背景 </summary>              <div class='content'>              <div class="bgbox"><a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://sourcebucket.s3.ladydaily.com/img/mc1.webp)" class="imgbox" onclick="changeBg('url(https://sourcebucket.s3.ladydaily.com/img/mc1.webp)')"></a></div>              </div>            </details><h3>4. 渐变色</h3><details class="folding-tag" cyan><summary> 查看渐变色背景 </summary>              <div class='content'>              <div class="bgbox"><a href="javascript:;" rel="noopener external nofollow" class="box" style="background: linear-gradient(to top, #355c7d, #6c5b7b, #c06c84)" onclick="changeBg('linear-gradient(to top, #355c7d, #6c5b7b, #c06c84)')"></a></div>              </div>            </details><h3>5. 纯色</h3><details class="folding-tag" cyan><summary> 查看纯色背景 </summary>              <div class='content'>              <div class="bgbox"><a href="javascript:;" rel="noopener external nofollow" class="box" style="background: #f7eff5" onclick="changeBg('#f7eff5')"></a>  <input type="color" id="colors" href="javascript:;" rel="noopener external nofollow" class="box" autocomplete="on" value="${defineColor}" oninput="changeBgColor()"></input></div>              </div>            </details><h3>6. 适配手机</h3><details class="folding-tag" cyan><summary> 查看适配手机的背景 </summary>              <div class='content'>              <p><div class="bgbox"><br><a href="javascript:;" rel="noopener external nofollow" style="background-image:url(https://sourcebucket.s3.ladydaily.com/img/mb4.webp)" class="pimgbox" onclick="changeBg('url(https\://sourcebucket.s3.ladydaily.com/img/mb4.webp)')"></a></p>              </div>            </details><h3>7. 自定义背景</h3><details class="folding-tag" cyan><summary> 设置自定义背景 </summary>              <div class='content'>              <p><center><input type="text" id="pic-link" size="70%" maxlength="1000" placeholder="请输入有效的图片链接，如 https://source.fomal.cc/img/home_bg.webp"></center></p><p><center><button type="button" onclick="getPicture()" style="background:var(--theme-color);width:35%;padding: 5px 0px 7px 0px;border-radius:30px;color:white;line-height:2;">🌈切换背景🌈</button></center></p>              </div>            </details><br><center><div style="font-size:1.2em;color:var(--theme-color);font-weight:bold;">------ ( •̀ ω •́ )y 到底啦 ------</div></center><br></div></div>`;  // 打开小窗时候初始化  $("#" + localStorage.getItem("themeColor")).attr("checked", true);  if (localStorage.getItem("blur") == 1) {    document.getElementById("blur").checked = true;  } else {    document.getElementById("blur").checked = false;  }  if (localStorage.getItem("universe") == "block") {    document.getElementById("universeSet").checked = true;  } else if (localStorage.getItem("universe") == "none") {    document.getElementById("universeSet").checked = false;  }  if (localStorage.getItem("fpson") == "1") {    document.getElementById("fpson").checked = true;  } else {    document.getElementById("fpson").checked = false;  }  if (localStorage.getItem("rs") == "block") {    document.getElementById("rightSideSet").checked = true;  } else if (localStorage.getItem("rs") == "none") {    document.getElementById("rightSideSet").checked = false;  }  if (localStorage.getItem("bing") == "true") {    document.getElementById("bingSet").checked = true;  } else {    document.getElementById("bingSet").checked = false;  }  if (localStorage.getItem("light") == "true") {    document.getElementById("lightSet").checked = true;  } else {    document.getElementById("lightSet").checked = false;  }  setFontBorder();}// 恢复默认背景function resetBg() {  localStorage.removeItem('blogbg');  reload();}// 恢复默认设置并刷新页面function reset() {  clearItem();  reload();}// 适应窗口大小function winResize() {  try {    var offsetWid = document.documentElement.clientWidth;    if (offsetWid <= 768) {      winbox.resize(offsetWid * 0.95 + "px", "90%").move("center", "center");    } else {      winbox.resize(offsetWid * 0.6 + "px", "70%").move("center", "center");    }  } catch (err) {    // console.log("Pjax毒瘤抽风运行winResize方法🙄🙄🙄");  }}// 切换状态，窗口已创建则控制窗口显示和隐藏，没窗口则创建窗口function toggleWinbox() {  if (document.querySelector("#meihuaBox")) {    winbox.toggleClass("hide");  } else {    createWinbox();  };}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/newYear.js"/>
      <url>/js/newYear.js</url>
      
        <content type="html"><![CDATA[let newYearTimer = null;var newYear = () => {    clearTimeout(newYearTimer);    if (!document.querySelector('#newYear')) return;    // 新年时间戳 and 星期对象    let newYear = new Date('2023-01-22 00:00:00').getTime() / 1000,        week = { 0: '周日', 1: '周一', 2: '周二', 3: '周三', 4: '周四', 5: '周五', 6: '周六' }    time();    // 补零函数    function nol(h) { return h > 9 ? h : '0' + h; };    function time() {        // 现在 时间对象        let now = new Date();        // 右下角 今天        document.querySelector('#newYear .today').innerHTML = now.getFullYear() + '-' + (now.getMonth() + 1) + '-' + now.getDate() + ' ' + week[now.getDay()]        // 现在与新年相差秒数        let second = newYear - Math.round(now.getTime() / 1000);        // 小于0则表示已经过年        if (second < 0) {            document.querySelector('#newYear .title').innerHTML = 'Happy New Year!';            document.querySelector('#newYear .newYear-time').innerHTML = '<span class="happyNewYear">新年快乐</p>';        } else {            // 大于0则还未过年            document.querySelector('#newYear .title').innerHTML = '距离2023年春节：'            // 大于一天则直接渲染天数            if (second > 86400) {                document.querySelector('#newYear .newYear-time').innerHTML = `<span class="day">${Math.ceil(second / 86400)}<span class="unit">天</span></span>`            } else {                // 小于一天则使用时分秒计时。                let h = nol(parseInt(second / 3600));                second %= 3600;                let m = nol(parseInt(second / 60));                second %= 60;                let s = nol(second);                document.querySelector('#newYear .newYear-time').innerHTML = `<span class="time">${h}:${m}:${s}</span></span>`;                // 计时                newYearTimer = setTimeout(time, 1000);            }        }    }    // 元宝飘落    jQuery(document).ready(function ($) {        $('#newYear').wpSuperSnow({            flakes: ['https://tuchuang.voooe.cn/images/2023/01/02/yb1.webp', 'https://tuchuang.voooe.cn/images/2023/01/02/yb2.webp', 'https://tuchuang.voooe.cn/images/2023/01/02/yb3.webp'],            totalFlakes: '100',            zIndex: '999999',            maxSize: '30',            maxDuration: '20',            useFlakeTrans: false        });    });}// Pjax适配：若没有开启Pjax这里直接是newYear()即可// 开了Pjax的用以下两句document.addEventListener('pjax:complete', newYear);document.addEventListener('DOMContentLoaded', newYear);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/readPercent.js"/>
      <url>/js/readPercent.js</url>
      
        <content type="html"><![CDATA[window.onscroll = percent;// 执行函数// 页面百分比function percent() {    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度        result = Math.round(a / b * 100), // 计算百分比        up = document.querySelector("#go-up") // 获取按钮    if (result <= 95) {        up.childNodes[0].style.display = 'none'        up.childNodes[1].style.display = 'block'        up.childNodes[1].innerHTML = result;    } else {        up.childNodes[1].style.display = 'none'        up.childNodes[0].style.display = 'block'    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){now.setTime(now.getTime()+1e3);var e=new Date("01/01/2023 00:00:00"),t=Math.trunc(234e8+(now-e)/1e3*17),a=(t/1496e5).toFixed(6),o=new Date("01/03/2023 00:00:00"),n=(now-o)/1e3/60/60/24,r=Math.floor(n),i=(now-o)/1e3/60/60-24*r,s=Math.floor(i);1==String(s).length&&(s="0"+s);var d=(now-o)/1e3/60-1440*r-60*s,l=Math.floor(d);1==String(l).length&&(l="0"+l);var g=(now-o)/1e3-86400*r-3600*s-60*l,b=Math.round(g);1==String(b).length&&(b="0"+b);let c="";c=s<18&&s>=9?`<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/F小屋-科研摸鱼中.svg' title='什么时候能够实现财富自由呀~'><br> <div style="font-size:13px;font-weight:bold">本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀</div>`:`<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/F小屋-下班休息啦.svg' title='下班了就该开开心心地玩耍~'><br> <div style="font-size:13px;font-weight:bold">本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀</div>`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=c)}setInterval((()=>{createtime()}),1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/share.js"/>
      <url>/js/share.js</url>
      
        <content type="html"><![CDATA[// 分享本页function share_() {  let url = window.location.origin + window.location.pathname  try {      // 截取标题      var title = document.title;      var subTitle = title.endsWith("| Fomalhaut🥝") ? title.substring(0, title.length - 14) : title;      navigator.clipboard.writeText('Fomalhaut🥝的站内分享\n标题：' + subTitle + '\n链接：' + url + '\n欢迎来访！🍭🍭🍭');      new Vue({          data: function () {              this.$notify({                  title: "成功复制分享信息🎉",                  message: "您现在可以通过粘贴直接跟小伙伴分享了！",                  position: 'top-left',                  offset: 50,                  showClose: true,                  type: "success",                   duration: 5000              });              // return { visible: false }          }      })  } catch (err) {      console.error('复制失败！', err);  }  // new ClipboardJS(".share", { text: function () { return '标题：' + document.title + '\n链接：' + url } });  // btf.snackbarShow("本页链接已复制到剪切板，快去分享吧~")}// 防抖function share() {  debounce(share_, 300);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/title.js"/>
      <url>/js/title.js</url>
      
        <content type="html"><![CDATA[//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function () {  if (document.hidden) {    //离开当前页面时标签显示内容    document.title = '👀跑哪里去了~';    clearTimeout(titleTime);  } else {    //返回当前页面时标签显示内容    document.title = '🐖抓到你啦～';    //两秒后变回正常标题    titleTime = setTimeout(function () {      document.title = OriginTitile;    }, 2000);  }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/snow.js"/>
      <url>/js/snow.js</url>
      
        <content type="html"><![CDATA[if ((navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i))) {  // 移动端不显示} else {  // document.write('<canvas id="snow" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:-2;pointer-events:none"></canvas>');  window && (() => {      let e = {          flakeCount: 50, // 雪花数目          minDist: 150,   // 最小距离          color: "255, 255, 255", // 雪花颜色          size: 1.5,  // 雪花大小          speed: .5,  // 雪花速度          opacity: .7,    // 雪花透明度          stepsize: .5    // 步距      };      const t = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function (e) {          window.setTimeout(e, 1e3 / 60)      }          ;      window.requestAnimationFrame = t;      const i = document.getElementById("snow"),          n = i.getContext("2d"),          o = e.flakeCount;      let a = -100,          d = -100,          s = [];      i.width = window.innerWidth,          i.height = window.innerHeight;      const h = () => {          n.clearRect(0, 0, i.width, i.height);          const r = e.minDist;          for (let t = 0; t < o; t++) {              let o = s[t];              const h = a,                  w = d,                  m = o.x,                  c = o.y,                  p = Math.sqrt((h - m) * (h - m) + (w - c) * (w - c));              if (p < r) {                  const e = (h - m) / p,                      t = (w - c) / p,                      i = r / (p * p) / 2;                  o.velX -= i * e,                      o.velY -= i * t              } else                  o.velX *= .98,                      o.velY < o.speed && o.speed - o.velY > .01 && (o.velY += .01 * (o.speed - o.velY)),                      o.velX += Math.cos(o.step += .05) * o.stepSize;              n.fillStyle = "rgba(" + e.color + ", " + o.opacity + ")",                  o.y += o.velY,                  o.x += o.velX,                  (o.y >= i.height || o.y <= 0) && l(o),                  (o.x >= i.width || o.x <= 0) && l(o),                  n.beginPath(),                  n.arc(o.x, o.y, o.size, 0, 2 * Math.PI),                  n.fill()          }          t(h)      }          , l = e => {              e.x = Math.floor(Math.random() * i.width),                  e.y = 0,                  e.size = 3 * Math.random() + 2,                  e.speed = 1 * Math.random() + .5,                  e.velY = e.speed,                  e.velX = 0,                  e.opacity = .5 * Math.random() + .3          }          ;      document.addEventListener("mousemove", (e => {          a = e.clientX,              d = e.clientY      }      )),          window.addEventListener("resize", (() => {              i.width = window.innerWidth,                  i.height = window.innerHeight          }          )),          (() => {              for (let t = 0; t < o; t++) {                  const t = Math.floor(Math.random() * i.width)                      , n = Math.floor(Math.random() * i.height)                      , o = 3 * Math.random() + e.size                      , a = 1 * Math.random() + e.speed                      , d = .5 * Math.random() + e.opacity;                  s.push({                      speed: a,                      velX: 0,                      velY: a,                      x: t,                      y: n,                      size: o,                      stepSize: Math.random() / 30 * e.stepsize,                      step: 0,                      angle: 180,                      opacity: d                  })              }              h()          }          )()  }  )();}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/weather.js"/>
      <url>/js/weather.js</url>
      
        <content type="html"><![CDATA[WIDGET = {  "CONFIG": {    "modules": "01234",    "background": "5",    "tmpColor": "FFFFFF",    "tmpSize": "16",    "cityColor": "FFFFFF",    "citySize": "16",    "aqiColor": "FFFFFF",    "aqiSize": "16",    "weatherIconSize": "24",    "alertIconSize": "18",    "padding": "10px 10px 10px 10px",    "shadow": "0",    "language": "zh",    "borderRadius": "10",    "fixed": "false",    "vertical": "top",    "horizontal": "left",    "city": "CN101260409",    "key": "0717cbe446fa4744adb4f0e2037dcd60"  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<div id="aplayer-oSEOhviA" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="4895239160" data-server="netease" data-type="playlist" data-mode="random" data-autoplay="false" data-listmaxheight="340px" data-preload="auto" data-theme="#e3f2f5" data-volume="0.4" mutex="true"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[<p><div class="addBtn"><button onclick="leonus.linkCom()"><i class="fa-solid fa-circle-plus"></i>快速申请 (默认样式)</button> <button onclick="leonus.linkCom(&quot;bf&quot;)"><i class="fa-solid fa-circle-plus"></i>快速申请 (Butterfly)</button></div></p><p><link rel="stylesheet" href="/css/kslink.css"></p><script src="/js/kslink.js"></script>]]></content>
      
    </entry>
    
    
  
</search>
